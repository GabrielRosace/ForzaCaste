{"ast":null,"code":"import _asyncToGenerator from \"/home/node/app/taw/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../app.component\";\nimport * as i2 from \"../_services/toast.service\";\nimport * as i3 from \"../socketio.service\";\nimport * as i4 from \"../user-http.service\";\nimport * as i5 from \"@angular/router\";\nimport * as i6 from \"@ng-bootstrap/ng-bootstrap\";\nimport * as i7 from \"@angular/material/icon\";\nimport * as i8 from \"@angular/common\";\nimport * as i9 from \"@angular/material/badge\";\n\nconst _c0 = function () {\n  return {\n    \"color\": \"white\"\n  };\n};\n\nfunction SidebarComponent_li_18_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"li\", 11);\n    i0.ɵɵelementStart(1, \"button\", 46);\n    i0.ɵɵlistener(\"click\", function SidebarComponent_li_18_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r13);\n      const ctx_r12 = i0.ɵɵnextContext();\n      return ctx_r12.getNotification(true, undefined);\n    });\n    i0.ɵɵelementStart(2, \"mat-icon\", 47);\n    i0.ɵɵtext(3, \"notifications \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"span\", 48);\n    i0.ɵɵtext(5, \" Notification\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"matBadge\", ctx_r0.badgeContent)(\"matBadgeHidden\", ctx_r0.hideMatBadge)(\"ngStyle\", i0.ɵɵpureFunction0(3, _c0));\n  }\n}\n\nfunction SidebarComponent_li_19_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r15 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"li\", 11);\n    i0.ɵɵelementStart(1, \"button\", 49);\n    i0.ɵɵlistener(\"click\", function SidebarComponent_li_19_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r14 = i0.ɵɵnextContext();\n      return ctx_r14.getModeratorList();\n    });\n    i0.ɵɵelementStart(2, \"mat-icon\", 47);\n    i0.ɵɵtext(3, \"chat \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"span\", 48);\n    i0.ɵɵtext(5, \" Moderator sms\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"matBadge\", ctx_r1.badgeContMod)(\"matBadgeHidden\", ctx_r1.hideBadgeMod)(\"ngStyle\", i0.ɵɵpureFunction0(3, _c0));\n  }\n}\n\nfunction SidebarComponent_li_20_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r17 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"li\", 11);\n    i0.ɵɵelementStart(1, \"button\", 12);\n    i0.ɵɵlistener(\"click\", function SidebarComponent_li_20_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r17);\n      const ctx_r16 = i0.ɵɵnextContext();\n      return ctx_r16.navigate(\"new-mod\");\n    });\n    i0.ɵɵelementStart(2, \"mat-icon\", 13);\n    i0.ɵɵtext(3, \"person_add\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \" Add new mod \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction0(1, _c0));\n  }\n}\n\nfunction SidebarComponent_li_21_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r19 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"li\", 11);\n    i0.ɵɵelementStart(1, \"button\", 50);\n    i0.ɵɵlistener(\"click\", function SidebarComponent_li_21_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r19);\n      const ctx_r18 = i0.ɵɵnextContext();\n      return ctx_r18.navigate(\"all-user\");\n    });\n    i0.ɵɵelementStart(2, \"mat-icon\", 47);\n    i0.ɵɵtext(3, \"people \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"span\", 48);\n    i0.ɵɵtext(5, \" All User\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"matBadge\", ctx_r3.badgeAllUs)(\"matBadgeHidden\", ctx_r3.hideBadgeAll)(\"ngStyle\", i0.ɵɵpureFunction0(3, _c0));\n  }\n}\n\nfunction SidebarComponent_li_32_button_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r27 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 55);\n    i0.ɵɵlistener(\"click\", function SidebarComponent_li_32_button_3_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r27);\n      const lnotification_r20 = i0.ɵɵnextContext().$implicit;\n      const ctx_r25 = i0.ɵɵnextContext();\n      return ctx_r25.addFriendToFriendlist(lnotification_r20.sender, true);\n    });\n    i0.ɵɵelementStart(1, \"span\");\n    i0.ɵɵelementStart(2, \"mat-icon\");\n    i0.ɵɵtext(3, \"done_outline\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction SidebarComponent_li_32_button_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r30 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 56);\n    i0.ɵɵlistener(\"click\", function SidebarComponent_li_32_button_4_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r30);\n      const lnotification_r20 = i0.ɵɵnextContext().$implicit;\n      const ctx_r28 = i0.ɵɵnextContext();\n      return ctx_r28.addFriendToFriendlist(lnotification_r20.sender, false);\n    });\n    i0.ɵɵelementStart(1, \"span\");\n    i0.ɵɵelementStart(2, \"mat-icon\");\n    i0.ɵɵtext(3, \"not_interested\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction SidebarComponent_li_32_button_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r33 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 55);\n    i0.ɵɵlistener(\"click\", function SidebarComponent_li_32_button_5_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r33);\n      const lnotification_r20 = i0.ɵɵnextContext().$implicit;\n      const ctx_r31 = i0.ɵɵnextContext();\n      return ctx_r31.acceptGamerequest(lnotification_r20.sender);\n    });\n    i0.ɵɵelementStart(1, \"span\");\n    i0.ɵɵelementStart(2, \"mat-icon\");\n    i0.ɵɵtext(3, \"done_outline\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction SidebarComponent_li_32_button_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r36 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 56);\n    i0.ɵɵlistener(\"click\", function SidebarComponent_li_32_button_6_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r36);\n      const lnotification_r20 = i0.ɵɵnextContext().$implicit;\n      const ctx_r34 = i0.ɵɵnextContext();\n      return ctx_r34.denyGamerequest(lnotification_r20.sender);\n    });\n    i0.ɵɵelementStart(1, \"span\");\n    i0.ɵɵelementStart(2, \"mat-icon\");\n    i0.ɵɵtext(3, \"not_interested\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction SidebarComponent_li_32_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 51);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementStart(2, \"span\", 52);\n    i0.ɵɵtemplate(3, SidebarComponent_li_32_button_3_Template, 4, 0, \"button\", 53);\n    i0.ɵɵtemplate(4, SidebarComponent_li_32_button_4_Template, 4, 0, \"button\", 54);\n    i0.ɵɵtemplate(5, SidebarComponent_li_32_button_5_Template, 4, 0, \"button\", 53);\n    i0.ɵɵtemplate(6, SidebarComponent_li_32_button_6_Template, 4, 0, \"button\", 54);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const lnotification_r20 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", lnotification_r20.msg, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", lnotification_r20.type == \"friendRequest\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", lnotification_r20.type == \"friendRequest\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", lnotification_r20.type == \"friendlyMatchmaking\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", lnotification_r20.type == \"friendlyMatchmaking\");\n  }\n}\n\nfunction SidebarComponent_li_45_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r39 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"li\", 51);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementStart(2, \"span\", 52);\n    i0.ɵɵelementStart(3, \"button\", 57);\n    i0.ɵɵlistener(\"click\", function SidebarComponent_li_45_Template_button_click_3_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r39);\n      const mod_r37 = restoredCtx.$implicit;\n      const ctx_r38 = i0.ɵɵnextContext();\n      ctx_r38.readMessage(ctx_r38.username, mod_r37.username, true);\n      ctx_r38.getInpendingMsgMod();\n      return ctx_r38.navigate(\"mod-chat/\" + mod_r37.username + \"\");\n    });\n    i0.ɵɵelementStart(4, \"span\");\n    i0.ɵɵelementStart(5, \"mat-icon\", 58);\n    i0.ɵɵtext(6, \"chat\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const mod_r37 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", mod_r37.username, \" \");\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"matBadge\", mod_r37.badgeNum)(\"matBadgeHidden\", mod_r37.badgeHidden)(\"ngStyle\", i0.ɵɵpureFunction0(4, _c0));\n  }\n}\n\nfunction SidebarComponent_div_49_img_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"img\", 66);\n  }\n\n  if (rf & 2) {\n    const ctx_r40 = i0.ɵɵnextContext(2);\n    i0.ɵɵpropertyInterpolate(\"src\", ctx_r40.avatarImgURL, i0.ɵɵsanitizeUrl);\n  }\n}\n\nfunction SidebarComponent_div_49_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r42 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 59);\n    i0.ɵɵelementStart(1, \"a\", 60);\n    i0.ɵɵtemplate(2, SidebarComponent_div_49_img_2_Template, 1, 1, \"img\", 61);\n    i0.ɵɵelementStart(3, \"strong\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"ul\", 62);\n    i0.ɵɵelementStart(6, \"li\");\n    i0.ɵɵelementStart(7, \"button\", 63);\n    i0.ɵɵlistener(\"click\", function SidebarComponent_div_49_Template_button_click_7_listener() {\n      i0.ɵɵrestoreView(_r42);\n      const ctx_r41 = i0.ɵɵnextContext();\n      return ctx_r41.navigate(\"profile\");\n    });\n    i0.ɵɵelementStart(8, \"mat-icon\", 64);\n    i0.ɵɵtext(9, \"account_circle\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(10, \" Profile\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"li\");\n    i0.ɵɵelement(12, \"hr\", 65);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"li\");\n    i0.ɵɵelementStart(14, \"button\", 63);\n    i0.ɵɵlistener(\"click\", function SidebarComponent_div_49_Template_button_click_14_listener() {\n      i0.ɵɵrestoreView(_r42);\n      const ctx_r43 = i0.ɵɵnextContext();\n      return ctx_r43.navigate(\"logout\");\n    });\n    i0.ɵɵelementStart(15, \"mat-icon\");\n    i0.ɵɵtext(16, \"exit_to_app\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(17, \" Sign out\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r6.has_nonregmod_role());\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r6.username);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction0(3, _c0));\n  }\n}\n\nfunction SidebarComponent_button_50_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r45 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 67);\n    i0.ɵɵlistener(\"click\", function SidebarComponent_button_50_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r45);\n      const ctx_r44 = i0.ɵɵnextContext();\n      return ctx_r44.getFriendlist();\n    });\n    i0.ɵɵelementStart(1, \"mat-icon\", 68);\n    i0.ɵɵtext(2, \"notifications \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(3, \"FriendList\\n\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"matBadge\", ctx_r7.badgeContentMsg)(\"matBadgeHidden\", ctx_r7.hideMatBadgeMsg)(\"ngStyle\", i0.ɵɵpureFunction0(3, _c0));\n  }\n}\n\nconst _c1 = function (a0) {\n  return {\n    \"background-color\": a0\n  };\n};\n\nfunction SidebarComponent_li_58_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r48 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"li\", 51);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementStart(2, \"span\", 52);\n    i0.ɵɵelementStart(3, \"button\", 69);\n    i0.ɵɵlistener(\"click\", function SidebarComponent_li_58_Template_button_click_3_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r48);\n      const lfriend_r46 = restoredCtx.$implicit;\n      const ctx_r47 = i0.ɵɵnextContext();\n      return ctx_r47.deleteFriend(lfriend_r46.username);\n    });\n    i0.ɵɵelementStart(4, \"span\");\n    i0.ɵɵelementStart(5, \"mat-icon\");\n    i0.ɵɵtext(6, \"close\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"button\", 70);\n    i0.ɵɵlistener(\"click\", function SidebarComponent_li_58_Template_button_click_7_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r48);\n      const lfriend_r46 = restoredCtx.$implicit;\n      const ctx_r49 = i0.ɵɵnextContext();\n      ctx_r49.readMessage(ctx_r49.username, lfriend_r46.username, false);\n      ctx_r49.getInpendinMsg();\n      return ctx_r49.navigate(\"friend-chat/\" + lfriend_r46.username + \"\");\n    });\n    i0.ɵɵelementStart(8, \"span\");\n    i0.ɵɵelementStart(9, \"mat-icon\", 58);\n    i0.ɵɵtext(10, \"chat\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"button\", 71);\n    i0.ɵɵlistener(\"click\", function SidebarComponent_li_58_Template_button_click_11_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r48);\n      const lfriend_r46 = restoredCtx.$implicit;\n      const ctx_r50 = i0.ɵɵnextContext();\n      return ctx_r50.navigate(\"user-stats/\" + lfriend_r46.username + \"\");\n    });\n    i0.ɵɵelementStart(12, \"span\");\n    i0.ɵɵelementStart(13, \"mat-icon\");\n    i0.ɵɵtext(14, \"equalizer\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"button\", 72);\n    i0.ɵɵlistener(\"click\", function SidebarComponent_li_58_Template_button_click_15_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r48);\n      const lfriend_r46 = restoredCtx.$implicit;\n      const ctx_r51 = i0.ɵɵnextContext();\n      return ctx_r51.blockUnblock(lfriend_r46.username, lfriend_r46.isBlocked);\n    });\n    i0.ɵɵelementStart(16, \"span\");\n    i0.ɵɵelement(17, \"i\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(18, \"span\", 73);\n    i0.ɵɵelementStart(19, \"span\", 74);\n    i0.ɵɵtext(20, \"New alerts\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const lfriend_r46 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", lfriend_r46.username, \" \");\n    i0.ɵɵadvance(8);\n    i0.ɵɵproperty(\"matBadge\", lfriend_r46.badgeNum)(\"matBadgeHidden\", lfriend_r46.badgeHidden)(\"ngStyle\", i0.ɵɵpureFunction0(8, _c0));\n    i0.ɵɵadvance(8);\n    i0.ɵɵclassMap(lfriend_r46.isBlocked);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction1(9, _c1, lfriend_r46.color));\n  }\n}\n\nfunction SidebarComponent_li_74_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r54 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"li\", 75);\n    i0.ɵɵlistener(\"click\", function SidebarComponent_li_74_Template_li_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r54);\n      const user_r52 = restoredCtx.$implicit;\n      const ctx_r53 = i0.ɵɵnextContext();\n      return ctx_r53.setName(user_r52.username);\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const user_r52 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(user_r52.username);\n  }\n}\n\nfunction SidebarComponent_div_77_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 76);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r11 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" Send Request error: \", ctx_r11.errMsg, \" \");\n  }\n}\n\nexport class SidebarComponent {\n  constructor(app, toast, sio, us, router, activeRoute) {\n    this.app = app;\n    this.toast = toast;\n    this.sio = sio;\n    this.us = us;\n    this.router = router;\n    this.activeRoute = activeRoute;\n    this.username = \"\"; //TODO tipo user\n\n    this.avatarImgURL = \"\";\n    this.tok = \"\";\n    this.errMsg = \"\";\n    this.badgeContent = 0;\n    this.badgeContentMsg = 0;\n    this.hideMatBadge = false;\n    this.hideMatBadgeMsg = false;\n    this.badgeContMod = 0;\n    this.hideBadgeMod = false;\n    this.badgeAllUs = 0;\n    this.hideBadgeAll = false;\n    this.friendUsername = \"\";\n    this.modlist = []; //private subsctiptionNot: Subscription\n\n    this.role = \"\";\n    this.type = \"\";\n    this.friendlist = [];\n    this.notification = [];\n    this.msg = \"\";\n    this.btnVal = [];\n    this.subscriptionName = this.us.get_update().subscribe(msg => {\n      // Update username and icon of logged user\n      msg = msg.text;\n\n      if (msg == \"User logged out\") {\n        this.tok = '';\n        this.username = '';\n        this.avatarImgURL = '';\n      } else if (msg == \"User logged in\") {\n        this.tok = this.us.get_token();\n        this.notifyFriendReq();\n        this.notifyGameReq();\n        this.notifyFriendReqAccepted();\n        this.notifyFriendDeleted();\n        this.notifyNewMsg();\n        this.getNotification(false, true);\n        this.getInpendinMsg();\n        this.getInpendingMsgMod();\n        this.getFriendlist();\n        this.getUsOnline();\n        this.notifyOnline();\n        this.foundGame();\n        this.username = this.us.get_username();\n      } else if (msg == \"Update user\") {\n        this.avatarImgURL = this.us.get_avatarImgURL();\n        this.notifyGameReq();\n        this.notifyFriendReq();\n        this.notifyFriendDeleted();\n        this.notifyFriendReqAccepted();\n        this.notifyNewMsg();\n        this.notifyOnline();\n        this.foundGame(); //this.getNotification(false, true)\n      }\n    });\n    this.subscriptionChat = this.us.get_badge().subscribe(msg => {\n      console.log(\"Chat get_badge\");\n      msg = msg.text;\n\n      if (msg == \"read friend-chat\") {\n        this.getInpendinMsg();\n      } else if (msg == \"read mod-chat\") {\n        this.getInpendingMsgMod();\n      }\n    });\n    /*\n        this.us.get_friendlist().subscribe((u) => {\n          this.friendlist = []\n          console.log()\n          u.friendlist.forEach((element: { [x: string]: any; }) => {\n            console.log(1)\n            this.friendlist.push({ id: element['_id'], username: element['username'], isBlocked: element['isBlocked'] })\n            console.log(this.friendlist);\n          });\n          console.log(this.friendlist);\n        })*/\n\n    /*\n    this.subsctiptionNot =  this.us.get_notification().subscribe((u) => {\n      this.notification = []\n      console.log()\n      u.notification.forEach((element: { [x: string]: any; }) => {\n        console.log(1)\n        this.notification.push({ id: element['_id'], username: element['sender'], type: element['type'] })\n        console.log(this.notification);\n      });\n      console.log(this.notification);\n    })*/\n  }\n\n  ngOnInit() {\n    this.tok = this.us.get_token();\n\n    if (this.tok) {\n      this.username = this.us.get_username();\n      this.avatarImgURL = this.us.get_avatarImgURL();\n      this.role = this.us.get_role(); //this.getNotification(false, true)\n    } else {\n      this.username = '';\n      this.avatarImgURL = '';\n    }\n  }\n\n  ngOnDestroy() {\n    /* Delete the subscription from the socket's listener */\n    this.subscriptionName.unsubscribe();\n    this.subscriptionReq.unsubscribe();\n    this.subscriptionNot.unsubscribe();\n    this.subscriptionMsg.unsubscribe();\n    this.gameReady.unsubscribe();\n    this.subscriptionChat.unsubscribe();\n  }\n\n  setName(username) {\n    this.friendUsername = username;\n  }\n\n  setErr() {\n    this.errMsg = \"\";\n  }\n\n  get_userlist() {\n    this.us.get_userlist().subscribe(elem => {\n      console.log(elem);\n      this.list = elem.userlist.filter(u => {\n        return u.username != this.us.get_username();\n      });\n    });\n  }\n\n  has_moderator_role() {\n    if (this.tok) {\n      return this.us.has_moderator_role();\n    }\n\n    return false;\n  }\n\n  has_nonregmod_role() {\n    if (this.tok) {\n      return this.us.has_nonregmod_role();\n    }\n\n    return false;\n  }\n  /*\n    toastN(msg: string) {\n      this.toast.show(msg, {\n        classname: 'bg-info text-light',\n        delay: 3000,\n        autohide: true\n      });\n    }*/\n\n\n  getNotification(makeNotificationRead, inpending) {\n    this.subscriptionNot = this.us.get_notification(makeNotificationRead, inpending).subscribe(u => {\n      this.notification = []; //console.log(\"inpending: \"+inpending)\n\n      u.notification.forEach(element => {\n        //console.log(1)\n        if (!(element['type'] == 'randomMatchmaking') && !(element['type'] == 'friendMessage')) {\n          let msg;\n\n          if (element['type'] == 'friendlyMatchmaking') {\n            msg = \"New Friendly Matchmaking from \" + element['sender'];\n          } else if (element['type'] == 'friendRequest') {\n            msg = \"New Friend Request from \" + element['sender'];\n          }\n\n          this.notification.push({\n            id: element['_id'],\n            sender: element['sender'],\n            type: element['type'],\n            msg: msg\n          }); //console.log(this.notification);\n\n          if (inpending == true) {\n            this.badgeContent++;\n          }\n        }\n      });\n\n      if (makeNotificationRead) {\n        this.badgeContent = 0;\n      }\n\n      if (this.badgeContent != 0) {\n        this.hideMatBadge = false;\n      } else {\n        this.hideMatBadge = true;\n      } //console.log(this.notification);\n\n\n      console.log(\"badgeContent: \" + this.badgeContent);\n    });\n  }\n\n  isFriendReq(type) {\n    if (type == 'friendRequest') {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  getFriendlist() {\n    console.log(\"GetFriendlist\"); //this.messageInpending = this.getInpendinMsg()\n\n    this.getInpendinMsg();\n    let g = this.router.url;\n    console.log(g); //console.log(this.messageInpending)\n\n    this.us.get_friendlist().subscribe(u => {\n      this.friendlist = [];\n      u.friendlist.forEach(element => {\n        let countMsg = 0;\n        let msgHide = true;\n        let col;\n        this.us.get_friend(element['username']).subscribe(friend => {\n          this.messageInpending.forEach(msg => {\n            if (msg.sender == element['username']) {\n              //date.getUTCDay().toString()+\"-\"+date.getUTCMonth().toString()+\"-\"+date.getFullYear().toString()+\" \"+date.getUTCHours().toString()+\":\"+date.getUTCMinutes().toString()\n              countMsg++; //console.log(this.num)\n            }\n          });\n          /*\n          let sos = this.onlineUser.filter((data: any) => {\n            if (data.username == friend.username) {\n              return true\n            } else {\n              return false\n            }\n          })*/\n          //console.log(this.onlineUser)\n\n          let sos = this.onlineUser.find(data => {\n            return data == element['username'];\n          }); //console.log(\"Sos\")\n          //console.log(sos)\n\n          if (sos == element['username']) {\n            col = \"#88D498\";\n          } else {\n            col = \"#A4A5AE\";\n          } //console.log(countMsg)\n\n\n          if (countMsg != 0) {\n            msgHide = false;\n          }\n\n          if (element['isBlocked']) {\n            this.friendlist.push({\n              id: element['_id'],\n              username: element['username'],\n              isBlocked: \"bi bi-person-check-fill\",\n              badgeNum: countMsg,\n              badgeHidden: msgHide,\n              color: col\n            });\n          } else {\n            this.friendlist.push({\n              id: element['_id'],\n              username: element['username'],\n              isBlocked: \"bi bi-person-x-fill\",\n              badgeNum: countMsg,\n              badgeHidden: msgHide,\n              color: col\n            });\n          }\n        });\n      });\n    });\n  }\n\n  getModeratorList() {\n    this.us.get_userlist().subscribe(elem => {\n      this.modlist = [];\n      this.list = elem.userlist;\n      console.log(this.list);\n      this.list.forEach(element => {\n        var countMsg = 0;\n        var msgHide = true;\n        this.messageInMod.forEach(msg => {\n          if (msg.sender == element['username']) {\n            //date.getUTCDay().toString()+\"-\"+date.getUTCMonth().toString()+\"-\"+date.getFullYear().toString()+\" \"+date.getUTCHours().toString()+\":\"+date.getUTCMinutes().toString()\n            countMsg++; //console.log(this.num)\n          }\n        });\n\n        if (countMsg != 0) {\n          msgHide = false;\n        }\n\n        if (element['roles'] == \"MODERATOR\") {\n          this.modlist.push({\n            id: element['_id'],\n            username: element['username'],\n            badgeNum: countMsg,\n            badgeHidden: msgHide\n            /*color: col */\n\n          });\n        }\n      });\n      console.log(this.modlist);\n    });\n  }\n\n  getUsOnline() {\n    let online = this.us.get_usersOnline().subscribe(elem => {\n      console.log(\"Online\");\n      console.log(elem.onlineuser);\n      this.onlineUser = elem.onlineuser;\n    });\n  } //Used to send a new friendRequest\n\n\n  addFriend(receiver, type) {\n    console.log(\"receiver: \", receiver);\n    this.errMsg = \"\";\n    this.us.add_friendRequest(receiver).subscribe(data => {\n      this.app.toastCust(\"Request Forwarded\"); //this.toastN(\"Request Forwarded\")\n    }, err => {\n      let msg = JSON.parse(JSON.stringify(err)).error;\n      console.log(`Login error: ${JSON.stringify(err)}`);\n      this.errMsg = msg[\"errormessage\"];\n    });\n  }\n\n  deleteFriend(friend) {\n    console.log(\"friend: \", friend);\n    this.us.delete_friend(friend).subscribe(data => {\n      this.app.toastCust(\"Friend deleted\"); //this.toastN(\"Friend deleted\")\n\n      this.getFriendlist();\n    });\n  }\n\n  notifyFriendReq() {\n    if (!this.sio.isNull()) {\n      this.subscriptionReq = this.sio.request().subscribe(msg => {\n        this.msg = JSON.parse(JSON.stringify(msg)).type;\n        let user = JSON.parse(JSON.stringify(msg)).sender;\n        console.log(JSON.parse(JSON.stringify(msg)).type); //console.log('got a msg: ' + msg);\n\n        if (msg) {\n          this.app.toastCust(\"New \" + this.msg + \" by \" + user); //this.toastN(\"New \" + this.msg + \" by \" + user)\n          //console.log('got a msg: ' + msg);\n        }\n\n        this.badgeContent = 0;\n        this.getNotification(false, true);\n        this.getNotification(false);\n      });\n    }\n  }\n\n  blockUnblock(username, block) {\n    let index = this.friendlist.findIndex(obj => obj.username == username);\n    console.log(this.friendlist[index]);\n\n    if (block == \"bi bi-person-check-fill\") {\n      this.us.block_unblock_friend(username, false).subscribe(data => {\n        //this.btnVal = \"Block\"\n        this.friendlist[index].isBlocked = \"bi bi-person-x-fill\";\n        this.app.toastCust(\"FRIEND UNBLOCKED\"); //this.toastN(\"FRIEND UNBLOCKED\")\n      });\n    } else if (block == \"bi bi-person-x-fill\") {\n      this.us.block_unblock_friend(username, true).subscribe(data => {\n        //his.btnVal = \"UnBlocked\"\n        this.friendlist[index].isBlocked = \"bi bi-person-check-fill\";\n        this.app.toastCust(\"FRIEND BLOCKED\"); //this.toastN(\"FRIEND BLOCKED\")\n      });\n    }\n  }\n\n  foundGame() {\n    /* Subscribe to a socket's listener, the lobby, for knwo if i find a match */\n    this.gameReady = this.sio.gameReady().subscribe(msg => {\n      console.log('got a msg lobby: ' + JSON.stringify(msg));\n\n      if (msg.gameReady) {\n        //rimuove il backdrop dei modal (bug di bootstrap)\n        this.sio.setP2(msg.opponentPlayer);\n        Array.from(document.getElementsByClassName('modal-backdrop')).forEach(item => {\n          var _a;\n\n          (_a = item.parentElement) === null || _a === void 0 ? void 0 : _a.removeChild(item);\n        });\n        this.router.navigate(['game']);\n      }\n\n      if (msg.gameReady != undefined && !msg.gameReady) {\n        //chiudere il modal\n        Array.from(document.getElementsByClassName('modal-backdrop')).forEach(item => {\n          var _a;\n\n          (_a = item.parentElement) === null || _a === void 0 ? void 0 : _a.removeChild(item);\n        });\n        this.app.toastCust(\"Friendly match refused\");\n      }\n    });\n  }\n\n  notifyGameReq() {\n    if (!this.sio.isNull()) {\n      this.subscriptionReq = this.sio.gameRequest().subscribe(msg => {\n        this.msg = JSON.parse(JSON.stringify(msg)).type;\n        let user = JSON.parse(JSON.stringify(msg)).player;\n        console.log(JSON.parse(JSON.stringify(msg)).type); //console.log('got a msg: ' + msg);\n\n        if (msg) {\n          this.app.toastCust(\"New \" + this.msg + \" by \" + user); //this.toastN(\"New \" + this.msg + \" by \" + user)\n          //console.log('got a msg: ' + msg);\n        }\n\n        this.badgeContent = 0;\n        this.getNotification(false, true);\n        this.getNotification(false);\n      });\n    }\n  }\n\n  notifyFriendReqAccepted() {\n    if (!this.sio.isNull()) {\n      this.subscriptionReq = this.sio.friendRequYN().subscribe(msg => {\n        //this.msg = JSON.parse(JSON.stringify(msg)).type\n        let user = JSON.parse(JSON.stringify(msg)).newFriend; //console.log(JSON.parse(JSON.stringify(msg)).type)\n\n        console.log('user: ' + user);\n\n        if (msg) {\n          if (user) {\n            this.app.toastCust(\"You are now friend with \" + user);\n          } else {\n            this.app.toastCust(\"Your friend request has been rejected\");\n          } //this.toastN(\"You are now friend with \" + user)\n          //console.log('got a msg: ' + msg);\n\n        }\n\n        this.getFriendlist();\n      });\n    }\n  }\n\n  notifyFriendDeleted() {\n    if (!this.sio.isNull()) {\n      this.subscriptionReq = this.sio.friendDeleted().subscribe(msg => {\n        this.msg = JSON.parse(JSON.stringify(msg)).deletedFriend; //let user = JSON.parse(JSON.stringify(msg)).newFriend\n        //console.log(JSON.parse(JSON.stringify(msg)).type)\n\n        console.log('msg Deleted Friend: ' + this.msg[0]);\n\n        if (msg) {\n          this.app.toastCust(\"The friend \" + this.msg + \" has removed you from the friendlist.\"); //this.toastN(\"The friend \" + this.msg + \" has removed you from the friendlist.\")\n          //console.log('got a msg: ' + msg);\n        }\n\n        this.getFriendlist();\n      });\n    }\n  } //Is used to add a new friend in the friendlist, when the friendRequest is accepted \n\n\n  addFriendToFriendlist(sender, accepted) {\n    console.log(\"sender: \", sender);\n    this.us.add_friend(sender, accepted).subscribe(data => {\n      this.app.toastCust(\"Request Accepted\"); //this.toastN(\"Request Accepted\")\n\n      this.getFriendlist();\n    });\n  } //Is used to add a new friend in the friendlist, when the friendRequest is accepted \n\n\n  acceptGamerequest(sender) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      console.log(\"sender: \", sender);\n\n      if (!_this.sio.isNull()) {\n        _this.us.friendGame = true;\n        yield _this.router.navigate(['/home']);\n\n        _this.us.acceptFriendgame(sender, true).subscribe(msg => {});\n      }\n    })();\n  }\n\n  denyGamerequest(sender) {\n    console.log(\"sender: \", sender);\n\n    if (!this.sio.isNull()) {\n      this.us.acceptFriendgame(sender, false).subscribe(msg => {});\n    }\n  }\n\n  getInpendinMsg() {\n    this.subscriptionIn = this.us.get_userMessage().subscribe(elem => {\n      console.log(\"InpendingMsg:\");\n      console.log(elem.inPendingMessages);\n      this.badgeContentMsg = 0;\n      this.messageInpending = elem.inPendingMessages;\n      this.messageInpending.forEach(element => {\n        if (element.receiver == this.us.get_username()) {\n          this.badgeContentMsg++;\n        }\n      });\n      console.log(\"badge\");\n      console.log(this.badgeContentMsg);\n\n      if (this.badgeContentMsg == 0) {\n        this.hideMatBadgeMsg = true;\n      } else {\n        this.hideMatBadgeMsg = false;\n      }\n      /*\n      console.log(\"GetInpending: \")\n      console.log(this.messageInpending)\n      this.us.get_friend(username).subscribe((friend) => {\n        this.messageInpending.forEach((element: any) => {\n          if (element.sender == username) {\n            //date.getUTCDay().toString()+\"-\"+date.getUTCMonth().toString()+\"-\"+date.getFullYear().toString()+\" \"+date.getUTCHours().toString()+\":\"+date.getUTCMinutes().toString()\n            console.log(\"Sono gabbriel\")\n            numb++\n            //console.log(this.num)\n          }\n        })\n      })*/\n\n    }); //return this.messageInpending\n  }\n\n  getInpendingMsgMod() {\n    this.subscriptionIn = this.us.get_userMessage(true).subscribe(elem => {\n      console.log(\"InpendingMsgMod:\");\n      console.log(elem.inPendingMessages);\n      this.badgeContMod = 0;\n      this.messageInMod = elem.inPendingMessages;\n      this.messageInMod.forEach(element => {\n        if (element.receiver == this.us.get_username()) {\n          this.badgeContMod++;\n        }\n      });\n      console.log(\"badgeMod\");\n      console.log(this.badgeContMod);\n\n      if (this.us.has_moderator_role()) {\n        this.badgeAllUs = this.badgeContMod;\n        this.badgeContMod = 0;\n      }\n\n      if (this.badgeAllUs == 0) {\n        this.hideBadgeAll = true;\n      } else {\n        this.hideBadgeAll = false;\n      }\n\n      if (this.badgeContMod == 0) {\n        this.hideBadgeMod = true;\n      } else {\n        this.hideBadgeMod = false;\n      }\n    });\n  }\n\n  readMessage(myus, username, modMessage) {\n    console.log(this.router.parseUrl(this.router.url));\n    this.us.readMessage(myus, username, modMessage).subscribe();\n  }\n  /*\n    getFriendListEnorme() {\n      this.subscriptionIn = this.us.get_userMessage().subscribe((elem: any) => {\n        //console.log(elem.inPendingMessages)\n        this.badgeContentMsg = 0\n        this.messageInpending = elem.inPendingMessages\n        this.us.get_friendlist().subscribe((u) => {\n          this.friendlist = []\n          u.friendlist.forEach((element: { [x: string]: any; }) => {\n            let countMsg: number = 0\n            let msgHide: boolean = true\n            let col\n            this.us.get_friend(element['username']).subscribe((friend) => {\n              this.messageInpending.forEach((msg: any) => {\n                if (msg.sender == element['username']) {\n                  countMsg++\n                }\n                if (msg.receiver == this.us.get_username() && msg.sender == element['username']) {\n                  this.badgeContentMsg++;\n                }\n              })\n              //console.log(countMsg)\n              //console.log(this.onlineUser)\n              let sos = this.onlineUser.find((data: any) => { return data == element['username'] })\n              //console.log(\"Sos\")\n              //console.log(sos)\n              if (sos == element['username']) {\n                col = \"yellow\"\n              } else {\n                col = \"red\"\n              }\n              if (countMsg != 0) {\n                msgHide = false\n              }\n              if (element['isBlocked']) {\n                this.friendlist.push({ id: element['_id'], username: element['username'], isBlocked: \"bi bi-person-check-fill\", badgeNum: countMsg, badgeHidden: msgHide, color: col })\n              } else {\n                this.friendlist.push({ id: element['_id'], username: element['username'], isBlocked: \"bi bi-person-x-fill\", badgeNum: countMsg, badgeHidden: msgHide, color: col })\n              }\n              if (this.badgeContentMsg == 0) {\n                this.hideMatBadgeMsg = true\n              } else {\n                this.hideMatBadgeMsg = false\n              }\n            })\n          });\n        })\n      })\n    }*/\n\n\n  notifyNewMsg() {\n    if (!this.sio.isNull()) {\n      //let g = this.router.parseUrl(this.router.url).root.children.primary.segments[0].path\n      //if (g) {\n      this.subscriptionMsg = this.sio.newMessage().subscribe(msg => {\n        console.log(\"Notify New Msg\");\n        console.log(msg);\n        let isAModMessage = JSON.parse(JSON.stringify(msg)).isAModMessage;\n        let rec = JSON.parse(JSON.stringify(msg)).receiver;\n        let send = JSON.parse(JSON.stringify(msg)).sender;\n        let inpend = JSON.parse(JSON.stringify(msg)).inpending;\n\n        if (isAModMessage) {\n          let g = this.router.parseUrl(this.router.url).root.children.primary.segments[0].path;\n          let g1 = \"\";\n\n          if (this.router.parseUrl(this.router.url).root.children.primary.segments[1] != undefined) {\n            g1 = this.router.parseUrl(this.router.url).root.children.primary.segments[1].path;\n          } //console.log(\"NotifyNewMsg\")\n\n\n          console.log(g1);\n\n          if (\"mod-chat\" != g || g1 != send) {\n            //console.log(\"NotifyNewMsg\")\n            if (inpend) {\n              this.getInpendingMsgMod();\n            } //console.log(g)\n            //console.log(inpend)\n\n\n            this.modlist.forEach(element => {\n              if (inpend) {\n                if (element['username'] == send) {\n                  element['badgeNum']++;\n                }\n\n                if (element['badgeNum'] != 0) {\n                  element['badgeHidden'] = false;\n                } else {\n                  element['badgeHidden'] = true;\n                }\n              }\n            });\n          }\n        } else {\n          let g = this.router.parseUrl(this.router.url).root.children.primary.segments[0].path;\n          let g1 = \"\";\n\n          if (this.router.parseUrl(this.router.url).root.children.primary.segments[1] != undefined) {\n            g1 = this.router.parseUrl(this.router.url).root.children.primary.segments[1].path;\n          } //console.log(\"NotifyNewMsg\")\n\n\n          console.log(g1);\n\n          if (\"friend-chat\" != g || g1 != send) {\n            //console.log(\"NotifyNewMsg\")\n            if (inpend) {\n              this.getInpendinMsg();\n            } //console.log(g)\n            //console.log(inpend)\n\n\n            this.friendlist.forEach(element => {\n              if (inpend) {\n                if (element['username'] == send) {\n                  element['badgeNum']++;\n                }\n\n                if (element['badgeNum'] != 0) {\n                  element['badgeHidden'] = false;\n                } else {\n                  element['badgeHidden'] = true;\n                }\n              }\n            }); //this.getFriendlist()\n\n            /*\n            this.friendlist.forEach((element: { [x: string]: any; }) => {\n              let countMsg: number = 0\n              let msgHide: boolean = true\n              let col\n              this.us.get_friend(element['username']).subscribe((friend) => {\n                this.messageInpending.forEach((msg: any) => {\n                  if (msg.sender == element['username']) {\n                    countMsg++\n                  }\n                  if (msg.receiver == this.us.get_username() && msg.sender == element['username']) {\n                    this.badgeContentMsg++;\n                  }\n                })\n                //console.log(countMsg)\n                console.log(this.onlineUser)\n                let sos = this.onlineUser.find((data: any) => { return data == element['username'] })\n                console.log(\"Sos\")\n                console.log(sos)\n                if (sos == element['username']) {\n                  col = \"yellow\"\n                } else {\n                  col = \"red\"\n                }\n                if (countMsg != 0) {\n                  msgHide = false\n                }\n                if (element['isBlocked']) {\n                  this.friendlist.push({ id: element['_id'], username: element['username'], isBlocked: \"bi bi-person-check-fill\", badgeNum: countMsg, badgeHidden: msgHide, color: col })\n                } else {\n                  this.friendlist.push({ id: element['_id'], username: element['username'], isBlocked: \"bi bi-person-x-fill\", badgeNum: countMsg, badgeHidden: msgHide, color: col })\n                }\n                if (this.badgeContentMsg == 0) {\n                  this.hideMatBadgeMsg = true\n                } else {\n                  this.hideMatBadgeMsg = false\n                }\n              })\n            })*/\n            //})\n            //this.getFriendListEnorme()\n          }\n        }\n      }); // }\n    }\n  }\n\n  notifyOnline() {\n    if (!this.sio.isNull()) {\n      this.subscriptionMsg = this.sio.isOnline().subscribe(msg => {\n        this.getUsOnline();\n        let usern = JSON.parse(JSON.stringify(msg)).username;\n        let conn = JSON.parse(JSON.stringify(msg)).isConnected; //console.log(\"NotifyOnline\")\n        //console.log(this.onlineUser)\n\n        this.friendlist.forEach(element => {\n          //console.log(element['username'])\n          //console.log(usern)\n          if (element['username'] == usern) {\n            if (conn) {\n              console.log(\"ONLINE\");\n              this.app.toastCust(usern + \" è online.\"); //this.toastN(usern+\" è online.\")\n\n              element['color'] = \"#88D498\";\n            } else {\n              console.log(\"OFFFLINE\");\n              this.app.toastCust(usern + \" è offline.\"); //this.toastN(usern+\" è offline.\")\n\n              element['color'] = \"#A4A5AE\";\n            }\n          } //console.log(element['color'])\n\n        });\n        /*\n        this.us.get_friendlist().subscribe((elem) => {\n          \n          elem.friendlist.forEach((element: { [x: string]: any; }) => {\n            console.log(element['username'])\n            console.log(usern)\n            if(element['username'] == usern){\n              if(conn){\n                element['color'] = \"yellow\"\n                element['username'] = \"Gigio\"\n              }else{\n                element['color'] = \"red\"\n              }\n            }\n            console.log(element['color'])\n          })*/\n\n        /*\n        let sis = elem.find((data: any) => { return data.username == msg })\n        console.log(\"uSERNAD\")\n        console.log(sis)\n        })*/\n      });\n    }\n  }\n\n  navigate(route) {\n    this.router.routeReuseStrategy.shouldReuseRoute = () => false;\n\n    this.router.onSameUrlNavigation = \"reload\";\n    this.router.navigate([route]);\n  }\n\n}\n\nSidebarComponent.ɵfac = function SidebarComponent_Factory(t) {\n  return new (t || SidebarComponent)(i0.ɵɵdirectiveInject(i1.AppComponent), i0.ɵɵdirectiveInject(i2.ToastService), i0.ɵɵdirectiveInject(i3.SocketioService), i0.ɵɵdirectiveInject(i4.UserHttpService), i0.ɵɵdirectiveInject(i5.Router), i0.ɵɵdirectiveInject(i5.ActivatedRoute));\n};\n\nSidebarComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: SidebarComponent,\n  selectors: [[\"app-sidebar\"]],\n  decls: 83,\n  vars: 14,\n  consts: [[1, \"myNav\", \"bg-dark\", \"text-white\"], [1, \"navbar\", \"navbar-dark\", \"text-white\", \"bg-dark\"], [1, \"container\"], [1, \"col-8\"], [\"id\", \"mainbtn\", 1, \"text-white\", \"border-0\", 3, \"click\"], [1, \"col-4\", \"nav\", \"justify-content-end\"], [\"type\", \"button\", \"data-bs-toggle\", \"collapse\", \"data-bs-target\", \"#navbarToggleExternalContent\", 1, \"navbar-toggler\"], [1, \"navbar-toggler-icon\"], [\"id\", \"navbarToggleExternalContent\", 1, \"collapse\", \"show\", \"pt-0\"], [1, \"p-1\", \"pt-0\"], [1, \"nav\", \"nav-pills\", \"flex-column\", \"mb-auto\"], [1, \"nav-item\"], [1, \"nav-link\", \"text-white\", \"w-100\", \"text-start\", 3, \"click\"], [\"color\", \"primary\", 1, \"customIcon\", 3, \"ngStyle\"], [\"class\", \"nav-item\", 4, \"ngIf\"], [\"id\", \"modalNot\", \"data-bs-backdrop\", \"true\", \"data-bs-keyboard\", \"false\", \"tabindex\", \"-1\", \"aria-labelledby\", \"modalReqLabel\", \"aria-hidden\", \"false\", 1, \"modal\", \"fade\", \"text-black\"], [1, \"modal-dialog\"], [1, \"modal-content\"], [1, \"modal-header\"], [\"id\", \"modalReqLabel\", 1, \"modal-title\"], [\"type\", \"button\", \"data-bs-dismiss\", \"modal\", \"aria-label\", \"Close\", 1, \"btn-close\"], [1, \"modal-body\"], [1, \"list-group\"], [\"class\", \"list-group-item d-flex justify-content-between align-items-center\", 4, \"ngFor\", \"ngForOf\"], [1, \"modal-footer\"], [\"type\", \"button\", \"data-bs-dismiss\", \"modal\", 1, \"btn\", \"btn-secondary\"], [\"id\", \"modalMod\", \"data-bs-backdrop\", \"true\", \"data-bs-keyboard\", \"false\", \"tabindex\", \"-1\", \"aria-labelledby\", \"modalReqLabel\", \"aria-hidden\", \"false\", 1, \"modal\", \"fade\", \"text-black\"], [\"class\", \"dropdown ms-3 profileIcon mb-3\", 4, \"ngIf\"], [\"class\", \"btn btn-primary\", \"id\", \"friendList\", \"type\", \"button\", \"data-bs-toggle\", \"offcanvas\", \"data-bs-target\", \"#friendListCanvas\", \"aria-controls\", \"friendListCanvas\", \"width\", \"32\", \"height\", \"32\", 3, \"click\", 4, \"ngIf\"], [\"data-bs-backdrop\", \"true\", \"data-bs-scroll\", \"true\", \"id\", \"friendListCanvas\", \"aria-labelledby\", \"offcanvasRightLabel\", 1, \"offcanvas\", \"offcanvas-end\", \"text-black\"], [1, \"offcanvas-header\"], [\"id\", \"offcanvasRightLabel\"], [\"type\", \"button\", \"data-bs-dismiss\", \"offcanvas\", \"aria-label\", \"Close\", 1, \"btn-close\", \"text-reset\"], [1, \"offcanvas-body\"], [\"type\", \"button\", \"id\", \"reqButton\", \"data-bs-toggle\", \"modal\", \"data-bs-target\", \"#modalReq\", 1, \"btn\", \"btn-primary\", \"mx-auto\", 3, \"click\"], [\"id\", \"modalReq\", \"data-bs-backdrop\", \"false\", \"data-bs-keyboard\", \"false\", \"tabindex\", \"-1\", \"aria-labelledby\", \"modalReqLabel\", \"aria-hidden\", \"false\", 1, \"modal\", \"fade\"], [\"type\", \"button\", \"data-bs-dismiss\", \"modal\", \"aria-label\", \"Close\", 1, \"btn-close\", 3, \"click\"], [1, \"form-floating\"], [\"type\", \"text\", \"id\", \"usernameFriend\", \"placeholder\", \"usernameAdd\", \"required\", \"\", 1, \"form-control\", 3, \"value\"], [\"usernameAdd\", \"\"], [\"id\", \"userList\", 1, \"list-group\"], [\"class\", \"list-group-item list-group-item-action list-group-item-info d-flex justify-content-between align-items-center\", 3, \"click\", 4, \"ngFor\", \"ngForOf\"], [\"for\", \"usernameFriend\"], [\"class\", \"alert alert-danger\", \"role\", \"alert\", 4, \"ngIf\"], [\"type\", \"button\", \"data-bs-dismiss\", \"modal\", 1, \"btn\", \"btn-secondary\", 3, \"click\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", 3, \"click\"], [\"id\", \"notification\", \"data-bs-toggle\", \"modal\", \"data-bs-target\", \"#modalNot\", 1, \"nav-link\", \"text-white\", \"w-100\", \"text-start\", 3, \"click\"], [\"color\", \"primary\", \"matBadgeColor\", \"accent\", \"matBadgePosition\", \"above before\", \"matBadgeOverlap\", \"true\", \"matBadgeSize\", \"medium\", 1, \"customIcon\", 3, \"matBadge\", \"matBadgeHidden\", \"ngStyle\"], [\"mat-raised-button\", \"\"], [\"id\", \"notification\", \"data-bs-toggle\", \"modal\", \"data-bs-target\", \"#modalMod\", 1, \"nav-link\", \"text-white\", \"w-100\", \"text-start\", 2, \"text-overflow\", \"ellipsis\", 3, \"click\"], [\"id\", \"allUs\", 1, \"nav-link\", \"text-white\", \"w-100\", \"text-start\", 3, \"click\"], [1, \"list-group-item\", \"d-flex\", \"justify-content-between\", \"align-items-center\"], [1, \"align-items-right\"], [\"type\", \"button\", \"class\", \"friendListBtn\", \"data-bs-dismiss\", \"modal\", \"id\", \"btnBlock\", 3, \"click\", 4, \"ngIf\"], [\"type\", \"button\", \"class\", \"friendListBtn\", \"data-bs-dismiss\", \"modal\", \"id\", \"btnDel\", 3, \"click\", 4, \"ngIf\"], [\"type\", \"button\", \"data-bs-dismiss\", \"modal\", \"id\", \"btnBlock\", 1, \"friendListBtn\", 3, \"click\"], [\"type\", \"button\", \"data-bs-dismiss\", \"modal\", \"id\", \"btnDel\", 1, \"friendListBtn\", 3, \"click\"], [\"type\", \"button\", \"data-bs-dismiss\", \"modal\", 1, \"friendListBtn\", \"mr-6\", 3, \"click\"], [\"matBadgeColor\", \"accent\", \"matBadgeSize\", \"small\", \"matBadgePosition\", \"above after\", \"matBadgeOverlap\", \"true\", 3, \"matBadge\", \"matBadgeHidden\", \"ngStyle\"], [1, \"dropdown\", \"ms-3\", \"profileIcon\", \"mb-3\"], [\"href\", \"#\", \"id\", \"dropdownUser1\", \"data-bs-toggle\", \"dropdown\", 1, \"align-items-center\", \"text-white\", \"text-decoration-none\", \"dropdown-toggle\"], [\"alt\", \"\", \"width\", \"32\", \"height\", \"32\", \"class\", \"rounded-circle me-2\", 3, \"src\", 4, \"ngIf\"], [1, \"dropdown-menu\", \"dropdown-menu-dark\", \"text-small\", \"shadow\"], [1, \"dropdown-item\", 3, \"click\"], [3, \"ngStyle\"], [1, \"dropdown-divider\"], [\"alt\", \"\", \"width\", \"32\", \"height\", \"32\", 1, \"rounded-circle\", \"me-2\", 3, \"src\"], [\"id\", \"friendList\", \"type\", \"button\", \"data-bs-toggle\", \"offcanvas\", \"data-bs-target\", \"#friendListCanvas\", \"aria-controls\", \"friendListCanvas\", \"width\", \"32\", \"height\", \"32\", 1, \"btn\", \"btn-primary\", 3, \"click\"], [\"color\", \"primary\", \"matBadgeColor\", \"accent\", \"matBadgePosition\", \"above after\", \"matBadgeOverlap\", \"true\", 3, \"matBadge\", \"matBadgeHidden\", \"ngStyle\"], [\"type\", \"button\", \"id\", \"btnDel\", 1, \"friendListBtn\", \"mr-2\", 3, \"click\"], [\"type\", \"button\", \"data-bs-dismiss\", \"offcanvas\", 1, \"friendListBtn\", \"mr-6\", 3, \"click\"], [\"type\", \"button\", \"data-bs-dismiss\", \"offcanvas\", 1, \"friendListBtn\", \"mr-2\", 3, \"click\"], [\"type\", \"button\", \"id\", \"btnBlock\", 1, \"friendListBtn\", 3, \"click\"], [1, \"on-off\", \"position-absolute\", \"translate-middle\", \"border\", \"border-light\", \"rounded-circle\", 3, \"ngStyle\"], [1, \"visually-hidden\"], [1, \"list-group-item\", \"list-group-item-action\", \"list-group-item-info\", \"d-flex\", \"justify-content-between\", \"align-items-center\", 3, \"click\"], [\"role\", \"alert\", 1, \"alert\", \"alert-danger\"]],\n  template: function SidebarComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r55 = i0.ɵɵgetCurrentView();\n\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelementStart(1, \"nav\", 1);\n      i0.ɵɵelementStart(2, \"div\", 2);\n      i0.ɵɵelementStart(3, \"div\", 3);\n      i0.ɵɵelementStart(4, \"button\", 4);\n      i0.ɵɵlistener(\"click\", function SidebarComponent_Template_button_click_4_listener() {\n        return ctx.navigate(\"home\");\n      });\n      i0.ɵɵtext(5, \"Forza Quattro\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"div\", 5);\n      i0.ɵɵelementStart(7, \"button\", 6);\n      i0.ɵɵelement(8, \"span\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"div\", 8);\n      i0.ɵɵelementStart(10, \"div\", 9);\n      i0.ɵɵelement(11, \"hr\");\n      i0.ɵɵelementStart(12, \"ul\", 10);\n      i0.ɵɵelementStart(13, \"li\", 11);\n      i0.ɵɵelementStart(14, \"button\", 12);\n      i0.ɵɵlistener(\"click\", function SidebarComponent_Template_button_click_14_listener() {\n        return ctx.navigate(\"home\");\n      });\n      i0.ɵɵelementStart(15, \"mat-icon\", 13);\n      i0.ɵɵtext(16, \"home\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(17, \" Home \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(18, SidebarComponent_li_18_Template, 6, 4, \"li\", 14);\n      i0.ɵɵtemplate(19, SidebarComponent_li_19_Template, 6, 4, \"li\", 14);\n      i0.ɵɵtemplate(20, SidebarComponent_li_20_Template, 5, 2, \"li\", 14);\n      i0.ɵɵtemplate(21, SidebarComponent_li_21_Template, 6, 4, \"li\", 14);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(22, \"hr\");\n      i0.ɵɵelementStart(23, \"div\", 15);\n      i0.ɵɵelementStart(24, \"div\", 16);\n      i0.ɵɵelementStart(25, \"div\", 17);\n      i0.ɵɵelementStart(26, \"div\", 18);\n      i0.ɵɵelementStart(27, \"h5\", 19);\n      i0.ɵɵtext(28, \"NOTIFICATION\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(29, \"button\", 20);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(30, \"div\", 21);\n      i0.ɵɵelementStart(31, \"div\", 22);\n      i0.ɵɵtemplate(32, SidebarComponent_li_32_Template, 7, 5, \"li\", 23);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(33, \"div\", 24);\n      i0.ɵɵelementStart(34, \"button\", 25);\n      i0.ɵɵtext(35, \"Close\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(36, \"div\", 26);\n      i0.ɵɵelementStart(37, \"div\", 16);\n      i0.ɵɵelementStart(38, \"div\", 17);\n      i0.ɵɵelementStart(39, \"div\", 18);\n      i0.ɵɵelementStart(40, \"h5\", 19);\n      i0.ɵɵtext(41, \"NOTIFICATION\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(42, \"button\", 20);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(43, \"div\", 21);\n      i0.ɵɵelementStart(44, \"div\", 22);\n      i0.ɵɵtemplate(45, SidebarComponent_li_45_Template, 7, 5, \"li\", 23);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(46, \"div\", 24);\n      i0.ɵɵelementStart(47, \"button\", 25);\n      i0.ɵɵtext(48, \"Close\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(49, SidebarComponent_div_49_Template, 18, 4, \"div\", 27);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(50, SidebarComponent_button_50_Template, 4, 4, \"button\", 28);\n      i0.ɵɵelementStart(51, \"div\", 29);\n      i0.ɵɵelementStart(52, \"div\", 30);\n      i0.ɵɵelementStart(53, \"h5\", 31);\n      i0.ɵɵtext(54, \"FriendList\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(55, \"button\", 32);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(56, \"div\", 33);\n      i0.ɵɵelementStart(57, \"div\", 22);\n      i0.ɵɵtemplate(58, SidebarComponent_li_58_Template, 21, 11, \"li\", 23);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(59, \"button\", 34);\n      i0.ɵɵlistener(\"click\", function SidebarComponent_Template_button_click_59_listener() {\n        return ctx.get_userlist();\n      });\n      i0.ɵɵtext(60, \" ADD FRIEND \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(61, \"div\", 35);\n      i0.ɵɵelementStart(62, \"div\", 16);\n      i0.ɵɵelementStart(63, \"div\", 17);\n      i0.ɵɵelementStart(64, \"div\", 18);\n      i0.ɵɵelementStart(65, \"h5\", 19);\n      i0.ɵɵtext(66, \"ADD A NEW FRIEND\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(67, \"button\", 36);\n      i0.ɵɵlistener(\"click\", function SidebarComponent_Template_button_click_67_listener() {\n        return ctx.setErr();\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(68, \"div\", 21);\n      i0.ɵɵelementStart(69, \"div\", 37);\n      i0.ɵɵelement(70, \"input\", 38, 39);\n      i0.ɵɵelement(72, \"br\");\n      i0.ɵɵelementStart(73, \"div\", 40);\n      i0.ɵɵtemplate(74, SidebarComponent_li_74_Template, 2, 1, \"li\", 41);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(75, \"label\", 42);\n      i0.ɵɵtext(76, \"Username\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(77, SidebarComponent_div_77_Template, 2, 1, \"div\", 43);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(78, \"div\", 24);\n      i0.ɵɵelementStart(79, \"button\", 44);\n      i0.ɵɵlistener(\"click\", function SidebarComponent_Template_button_click_79_listener() {\n        return ctx.setErr();\n      });\n      i0.ɵɵtext(80, \"Close\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(81, \"button\", 45);\n      i0.ɵɵlistener(\"click\", function SidebarComponent_Template_button_click_81_listener() {\n        i0.ɵɵrestoreView(_r55);\n\n        const _r9 = i0.ɵɵreference(71);\n\n        return ctx.addFriend(_r9.value, \"friendRequest\");\n      })(\"click\", function SidebarComponent_Template_button_click_81_listener() {\n        i0.ɵɵrestoreView(_r55);\n\n        const _r9 = i0.ɵɵreference(71);\n\n        return _r9.value = \"\";\n      });\n      i0.ɵɵtext(82, \"Send the request\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(15);\n      i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction0(13, _c0));\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.username);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.username);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.has_moderator_role());\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.has_moderator_role());\n      i0.ɵɵadvance(11);\n      i0.ɵɵproperty(\"ngForOf\", ctx.notification);\n      i0.ɵɵadvance(13);\n      i0.ɵɵproperty(\"ngForOf\", ctx.modlist);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", ctx.username);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.username);\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"ngForOf\", ctx.friendlist);\n      i0.ɵɵadvance(12);\n      i0.ɵɵproperty(\"value\", ctx.friendUsername);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngForOf\", ctx.list);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.errMsg);\n    }\n  },\n  directives: [i6.NgbNavbar, i7.MatIcon, i8.NgStyle, i8.NgIf, i8.NgForOf, i9.MatBadge],\n  styles: [\"@media screen and (min-width: 600px) {\\n  .myNav[_ngcontent-%COMP%]{\\n    height: 100%;\\n  }\\n  .navbar-toggler[_ngcontent-%COMP%]{\\n    display: none;\\n  }\\n  .profileIcon[_ngcontent-%COMP%]{\\n    position: fixed;\\n    right: 0;\\n    bottom: 0;\\n    left: 0;\\n  }\\n\\n  #navbarToggleExternalContent[_ngcontent-%COMP%]{\\n    display: block;\\n  }\\n\\n  .modal[_ngcontent-%COMP%] {\\n    -webkit-backdrop-filter: static;\\n            backdrop-filter: static;\\n   }\\n}\\n@media screen and (max-width: 450px) {\\n  .friendListBtn[_ngcontent-%COMP%] {\\n    background: #212529 !important;\\n  }\\n  #btnDel[_ngcontent-%COMP%]{\\n    background: #212529 !important;\\n   }\\n   #btnBlock[_ngcontent-%COMP%]{\\n    background: #212529 !important;\\n   }\\n}\\n.list-group-item-info[_ngcontent-%COMP%] {\\n  color: #212529;\\n  background-color: #ffff;\\n}\\n.list-group[_ngcontent-%COMP%]{\\n  overflow-y: auto;\\n  \\n  height:  65vh;\\n  max-height: 75vh;\\n  backdrop-filter: blur(16px) saturate(180%);\\n  -webkit-backdrop-filter: blur(16px) saturate(180%);\\n  background-color: rgba(255, 255, 255, 0.75)!important;\\n  border-radius: 6px;\\n  border: 1px solid rgba(209, 213, 219, 0.3);\\n}\\n.on-off[_ngcontent-%COMP%]{\\n  position: absolute;\\n  top: 16% !important;\\n  left: 2.5% !important;\\n  padding: 0.4rem;\\n}\\n#userList[_ngcontent-%COMP%]{\\n  overflow-y: scroll;\\n  height:  45vh;\\n  max-height: 55vh;\\n  backdrop-filter: blur(16px) saturate(180%);\\n  -webkit-backdrop-filter: blur(16px) saturate(180%);\\n  background-color: rgba(255, 255, 255, 0.75)!important;\\n  border-radius: 6px;\\n  border: 1px solid rgba(209, 213, 219, 0.3);\\n}\\n#friendList[_ngcontent-%COMP%]{\\n  position: fixed;\\n  bottom: 2%;\\n  right: 2%;\\n  z-index: 100;\\n}\\n.offcanvas[_ngcontent-%COMP%]{\\n  backdrop-filter: blur(16px) saturate(180%);\\n  -webkit-backdrop-filter: blur(16px) saturate(180%);\\n  background-color: rgba(255, 255, 255, 0.75);\\n  border-radius: 6px;\\n  border: 1px solid rgba(209, 213, 219, 0.3);\\n}\\n\\n.mat-icon[_ngcontent-%COMP%]{\\n  vertical-align: sub;\\n  font-size: 25px;\\n}\\n.customIcon[_ngcontent-%COMP%]{\\n  text-align-last: right;\\n  vertical-align: sub;\\n  font-size: 19px;\\n}\\n.friendListBtn[_ngcontent-%COMP%] {\\n  outline: none;\\n  cursor: pointer;\\n  border: none;\\n  padding: 0.5vh 0.6vw;\\n  margin: 0;\\n  margin-left: 0.40rem;\\n  font-family: inherit;\\n  font-size: inherit;\\n  position: relative;\\n  display: inline-block;\\n  letter-spacing: 0.05rem;\\n  font-weight: 700;\\n  font-size: 17px;\\n  border-radius: 300px;\\n  overflow: hidden;\\n  background: #59C9A5;\\n  color: ghostwhite;\\n }\\n.friendListBtn[_ngcontent-%COMP%]   .mat-icon[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%]{\\n   transform:translate(-4px, 16px)!important;\\n }\\n#btnDel[_ngcontent-%COMP%]{\\n  background: red;\\n }\\n#btnBlock[_ngcontent-%COMP%]{\\n  background: #E59500;\\n }\\n#reqButton[_ngcontent-%COMP%]{\\n   position: relative;\\n   left: 34%;\\n   right: 34%;\\n   top: 3%;\\n }\\n.friendListBtn[_ngcontent-%COMP%]   span[_ngcontent-%COMP%] {\\n  position: relative;\\n  z-index: 10;\\n  transition: color 0.4s;\\n }\\n.friendListBtn[_ngcontent-%COMP%]:hover   span[_ngcontent-%COMP%] {\\n  color: white;\\n }\\n.friendListBtn[_ngcontent-%COMP%]::before, .friendListBtn[_ngcontent-%COMP%]::after {\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  width: 10vw;\\n  height: 10vh;\\n  z-index: 0;\\n }\\n.friendListBtn[_ngcontent-%COMP%]::before {\\n  content: \\\"\\\";\\n  background: #212529;\\n  width: 12vw;\\n  left: -10%;\\n  transform: skew(30deg);\\n  transition: transform 0.4s cubic-bezier(0.3, 1, 0.8, 1);\\n }\\n.friendListBtn[_ngcontent-%COMP%]:hover::before {\\n  transform: translate3d(100%, 0, 0);\\n }\\n.dot[_ngcontent-%COMP%] {\\n  height: 25px;\\n  width: 25px;\\n  background-color: #bbb;\\n  border-radius: 50%;\\n  display: inline-block;\\n}\\n\\n.nav-link[_ngcontent-%COMP%]:hover, .dropdown-item[_ngcontent-%COMP%]:hover {\\n  background-color: #1e5a7a;\\n}\\n#mainbtn[_ngcontent-%COMP%]{\\n  background-color: var(--bs-dark)\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNpZGViYXIuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFO0lBQ0UsWUFBWTtFQUNkO0VBQ0E7SUFDRSxhQUFhO0VBQ2Y7RUFDQTtJQUNFLGVBQWU7SUFDZixRQUFRO0lBQ1IsU0FBUztJQUNULE9BQU87RUFDVDs7RUFFQTtJQUNFLGNBQWM7RUFDaEI7O0VBRUE7SUFDRSwrQkFBdUI7WUFBdkIsdUJBQXVCO0dBQ3hCO0FBQ0g7QUFDQTtFQUNFO0lBQ0UsOEJBQThCO0VBQ2hDO0VBQ0E7SUFDRSw4QkFBOEI7R0FDL0I7R0FDQTtJQUNDLDhCQUE4QjtHQUMvQjtBQUNIO0FBRUE7RUFDRSxjQUFjO0VBQ2QsdUJBQXVCO0FBQ3pCO0FBRUE7RUFDRSxnQkFBZ0I7RUFDaEIsaUJBQWlCO0VBQ2pCLGFBQWE7RUFDYixnQkFBZ0I7RUFDaEIsMENBQTBDO0VBQzFDLGtEQUFrRDtFQUNsRCxxREFBcUQ7RUFDckQsa0JBQWtCO0VBQ2xCLDBDQUEwQztBQUM1QztBQUVBO0VBQ0Usa0JBQWtCO0VBQ2xCLG1CQUFtQjtFQUNuQixxQkFBcUI7RUFDckIsZUFBZTtBQUNqQjtBQUdBO0VBQ0Usa0JBQWtCO0VBQ2xCLGFBQWE7RUFDYixnQkFBZ0I7RUFDaEIsMENBQTBDO0VBQzFDLGtEQUFrRDtFQUNsRCxxREFBcUQ7RUFDckQsa0JBQWtCO0VBQ2xCLDBDQUEwQztBQUM1QztBQUVBO0VBQ0UsZUFBZTtFQUNmLFVBQVU7RUFDVixTQUFTO0VBQ1QsWUFBWTtBQUNkO0FBRUE7RUFDRSwwQ0FBMEM7RUFDMUMsa0RBQWtEO0VBQ2xELDJDQUEyQztFQUMzQyxrQkFBa0I7RUFDbEIsMENBQTBDO0FBQzVDO0FBRUEsb0JBQW9CO0FBQ3BCO0VBQ0UsbUJBQW1CO0VBQ25CLGVBQWU7QUFDakI7QUFFQTtFQUNFLHNCQUFzQjtFQUN0QixtQkFBbUI7RUFDbkIsZUFBZTtBQUNqQjtBQUVBO0VBQ0UsYUFBYTtFQUNiLGVBQWU7RUFDZixZQUFZO0VBQ1osb0JBQW9CO0VBQ3BCLFNBQVM7RUFDVCxvQkFBb0I7RUFDcEIsb0JBQW9CO0VBQ3BCLGtCQUFrQjtFQUNsQixrQkFBa0I7RUFDbEIscUJBQXFCO0VBQ3JCLHVCQUF1QjtFQUN2QixnQkFBZ0I7RUFDaEIsZUFBZTtFQUNmLG9CQUFvQjtFQUNwQixnQkFBZ0I7RUFDaEIsbUJBQW1CO0VBQ25CLGlCQUFpQjtDQUNsQjtBQUVBO0dBQ0UseUNBQXlDO0NBQzNDO0FBRUE7RUFDQyxlQUFlO0NBQ2hCO0FBQ0E7RUFDQyxtQkFBbUI7Q0FDcEI7QUFDQTtHQUNFLGtCQUFrQjtHQUNsQixTQUFTO0dBQ1QsVUFBVTtHQUNWLE9BQU87Q0FDVDtBQUVBO0VBQ0Msa0JBQWtCO0VBQ2xCLFdBQVc7RUFDWCxzQkFBc0I7Q0FDdkI7QUFFQTtFQUNDLFlBQVk7Q0FDYjtBQUVBOztFQUVDLGtCQUFrQjtFQUNsQixNQUFNO0VBQ04sT0FBTztFQUNQLFdBQVc7RUFDWCxZQUFZO0VBQ1osVUFBVTtDQUNYO0FBRUE7RUFDQyxXQUFXO0VBQ1gsbUJBQW1CO0VBQ25CLFdBQVc7RUFDWCxVQUFVO0VBQ1Ysc0JBQXNCO0VBQ3RCLHVEQUF1RDtDQUN4RDtBQUVBO0VBQ0Msa0NBQWtDO0NBQ25DO0FBRUE7RUFDQyxZQUFZO0VBQ1osV0FBVztFQUNYLHNCQUFzQjtFQUN0QixrQkFBa0I7RUFDbEIscUJBQXFCO0FBQ3ZCO0FBQ0Esb0JBQW9CO0FBRXBCO0VBQ0UseUJBQXlCO0FBQzNCO0FBRUE7RUFDRTtBQUNGIiwiZmlsZSI6InNpZGViYXIuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDYwMHB4KSB7XG4gIC5teU5hdntcbiAgICBoZWlnaHQ6IDEwMCU7XG4gIH1cbiAgLm5hdmJhci10b2dnbGVye1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gIH1cbiAgLnByb2ZpbGVJY29ue1xuICAgIHBvc2l0aW9uOiBmaXhlZDtcbiAgICByaWdodDogMDtcbiAgICBib3R0b206IDA7XG4gICAgbGVmdDogMDtcbiAgfVxuXG4gICNuYXZiYXJUb2dnbGVFeHRlcm5hbENvbnRlbnR7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gIH1cblxuICAubW9kYWwge1xuICAgIGJhY2tkcm9wLWZpbHRlcjogc3RhdGljO1xuICAgfVxufVxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNDUwcHgpIHtcbiAgLmZyaWVuZExpc3RCdG4ge1xuICAgIGJhY2tncm91bmQ6ICMyMTI1MjkgIWltcG9ydGFudDtcbiAgfVxuICAjYnRuRGVse1xuICAgIGJhY2tncm91bmQ6ICMyMTI1MjkgIWltcG9ydGFudDtcbiAgIH1cbiAgICNidG5CbG9ja3tcbiAgICBiYWNrZ3JvdW5kOiAjMjEyNTI5ICFpbXBvcnRhbnQ7XG4gICB9XG59XG5cbi5saXN0LWdyb3VwLWl0ZW0taW5mbyB7XG4gIGNvbG9yOiAjMjEyNTI5O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZjtcbn1cblxuLmxpc3QtZ3JvdXB7XG4gIG92ZXJmbG93LXk6IGF1dG87XG4gIC8qZGlzcGxheTogZmxleDsqL1xuICBoZWlnaHQ6ICA2NXZoO1xuICBtYXgtaGVpZ2h0OiA3NXZoO1xuICBiYWNrZHJvcC1maWx0ZXI6IGJsdXIoMTZweCkgc2F0dXJhdGUoMTgwJSk7XG4gIC13ZWJraXQtYmFja2Ryb3AtZmlsdGVyOiBibHVyKDE2cHgpIHNhdHVyYXRlKDE4MCUpO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuNzUpIWltcG9ydGFudDtcbiAgYm9yZGVyLXJhZGl1czogNnB4O1xuICBib3JkZXI6IDFweCBzb2xpZCByZ2JhKDIwOSwgMjEzLCAyMTksIDAuMyk7XG59XG5cbi5vbi1vZmZ7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAxNiUgIWltcG9ydGFudDtcbiAgbGVmdDogMi41JSAhaW1wb3J0YW50O1xuICBwYWRkaW5nOiAwLjRyZW07XG59XG5cblxuI3VzZXJMaXN0e1xuICBvdmVyZmxvdy15OiBzY3JvbGw7XG4gIGhlaWdodDogIDQ1dmg7XG4gIG1heC1oZWlnaHQ6IDU1dmg7XG4gIGJhY2tkcm9wLWZpbHRlcjogYmx1cigxNnB4KSBzYXR1cmF0ZSgxODAlKTtcbiAgLXdlYmtpdC1iYWNrZHJvcC1maWx0ZXI6IGJsdXIoMTZweCkgc2F0dXJhdGUoMTgwJSk7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC43NSkhaW1wb3J0YW50O1xuICBib3JkZXItcmFkaXVzOiA2cHg7XG4gIGJvcmRlcjogMXB4IHNvbGlkIHJnYmEoMjA5LCAyMTMsIDIxOSwgMC4zKTtcbn1cblxuI2ZyaWVuZExpc3R7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgYm90dG9tOiAyJTtcbiAgcmlnaHQ6IDIlO1xuICB6LWluZGV4OiAxMDA7XG59XG5cbi5vZmZjYW52YXN7XG4gIGJhY2tkcm9wLWZpbHRlcjogYmx1cigxNnB4KSBzYXR1cmF0ZSgxODAlKTtcbiAgLXdlYmtpdC1iYWNrZHJvcC1maWx0ZXI6IGJsdXIoMTZweCkgc2F0dXJhdGUoMTgwJSk7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC43NSk7XG4gIGJvcmRlci1yYWRpdXM6IDZweDtcbiAgYm9yZGVyOiAxcHggc29saWQgcmdiYSgyMDksIDIxMywgMjE5LCAwLjMpO1xufVxuXG4vKkJ1dHRvbiBGcmllbmRMaXN0Ki9cbi5tYXQtaWNvbntcbiAgdmVydGljYWwtYWxpZ246IHN1YjtcbiAgZm9udC1zaXplOiAyNXB4O1xufVxuXG4uY3VzdG9tSWNvbntcbiAgdGV4dC1hbGlnbi1sYXN0OiByaWdodDtcbiAgdmVydGljYWwtYWxpZ246IHN1YjtcbiAgZm9udC1zaXplOiAxOXB4O1xufVxuXG4uZnJpZW5kTGlzdEJ0biB7XG4gIG91dGxpbmU6IG5vbmU7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgYm9yZGVyOiBub25lO1xuICBwYWRkaW5nOiAwLjV2aCAwLjZ2dztcbiAgbWFyZ2luOiAwO1xuICBtYXJnaW4tbGVmdDogMC40MHJlbTtcbiAgZm9udC1mYW1pbHk6IGluaGVyaXQ7XG4gIGZvbnQtc2l6ZTogaW5oZXJpdDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIGxldHRlci1zcGFjaW5nOiAwLjA1cmVtO1xuICBmb250LXdlaWdodDogNzAwO1xuICBmb250LXNpemU6IDE3cHg7XG4gIGJvcmRlci1yYWRpdXM6IDMwMHB4O1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBiYWNrZ3JvdW5kOiAjNTlDOUE1O1xuICBjb2xvcjogZ2hvc3R3aGl0ZTtcbiB9XG5cbiAuZnJpZW5kTGlzdEJ0biAubWF0LWljb24gLm1hdC1iYWRnZS1jb250ZW50e1xuICAgdHJhbnNmb3JtOnRyYW5zbGF0ZSgtNHB4LCAxNnB4KSFpbXBvcnRhbnQ7XG4gfVxuIFxuICNidG5EZWx7XG4gIGJhY2tncm91bmQ6IHJlZDtcbiB9XG4gI2J0bkJsb2Nre1xuICBiYWNrZ3JvdW5kOiAjRTU5NTAwO1xuIH1cbiAjcmVxQnV0dG9ue1xuICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgbGVmdDogMzQlO1xuICAgcmlnaHQ6IDM0JTtcbiAgIHRvcDogMyU7XG4gfVxuXG4gLmZyaWVuZExpc3RCdG4gc3BhbiB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgei1pbmRleDogMTA7XG4gIHRyYW5zaXRpb246IGNvbG9yIDAuNHM7XG4gfVxuIFxuIC5mcmllbmRMaXN0QnRuOmhvdmVyIHNwYW4ge1xuICBjb2xvcjogd2hpdGU7XG4gfVxuIFxuIC5mcmllbmRMaXN0QnRuOjpiZWZvcmUsXG4gLmZyaWVuZExpc3RCdG46OmFmdGVyIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDA7XG4gIGxlZnQ6IDA7XG4gIHdpZHRoOiAxMHZ3O1xuICBoZWlnaHQ6IDEwdmg7XG4gIHotaW5kZXg6IDA7XG4gfVxuIFxuIC5mcmllbmRMaXN0QnRuOjpiZWZvcmUge1xuICBjb250ZW50OiBcIlwiO1xuICBiYWNrZ3JvdW5kOiAjMjEyNTI5O1xuICB3aWR0aDogMTJ2dztcbiAgbGVmdDogLTEwJTtcbiAgdHJhbnNmb3JtOiBza2V3KDMwZGVnKTtcbiAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuNHMgY3ViaWMtYmV6aWVyKDAuMywgMSwgMC44LCAxKTtcbiB9XG4gXG4gLmZyaWVuZExpc3RCdG46aG92ZXI6OmJlZm9yZSB7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlM2QoMTAwJSwgMCwgMCk7XG4gfVxuIFxuIC5kb3Qge1xuICBoZWlnaHQ6IDI1cHg7XG4gIHdpZHRoOiAyNXB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjYmJiO1xuICBib3JkZXItcmFkaXVzOiA1MCU7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbn1cbi8qQnV0dG9uIEZyaWVuZExpc3QqL1xuXG4ubmF2LWxpbms6aG92ZXIsIC5kcm9wZG93bi1pdGVtOmhvdmVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzFlNWE3YTtcbn1cblxuI21haW5idG57XG4gIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWJzLWRhcmspXG59Il19 */\"]\n});","map":{"version":3,"sources":["/home/node/app/taw/src/app/sidebar/sidebar.component.ts","/home/node/app/taw/src/app/sidebar/sidebar.component.html"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { UserHttpService } from '../user-http.service';\nimport { Socket } from 'socket.io-client';\nimport { SocketioService } from '../socketio.service';\nimport { AppComponent } from '../app.component';\nimport { ToastService } from '../_services/toast.service';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { ignoreElements } from 'rxjs/operators';\nimport { isNgContainer } from '@angular/compiler';\nimport { ActivatedRoute } from '@angular/router';\n\n\n\n\n\n@Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.css']\n})\nexport class SidebarComponent implements OnInit, OnDestroy {\n\n  public username: string = \"\" //TODO tipo user\n  public avatarImgURL: string = \"\"\n  private tok: string = \"\"\n  public gameReady!: Subscription\n  private subscriptionName: Subscription\n  private subscriptionReq!: Subscription\n  private subscriptionNot!: Subscription\n  private subscriptionMsg!: Subscription\n  private subscriptionIn!: Subscription\n  private subscriptionChat!: Subscription\n\n  public errMsg: string = \"\"\n\n  public badgeContent: number = 0\n  public badgeContentMsg: number = 0\n  public hideMatBadge: boolean = false\n  public hideMatBadgeMsg: boolean = false\n  public badgeContMod: number = 0\n  public hideBadgeMod: boolean = false\n\n  public badgeAllUs: number = 0\n  public hideBadgeAll: boolean = false\n\n  public friendUsername: string = \"\"\n  public list?: any\n  public messagelist?: any\n  public messageInpending?: any\n\n  public messageInMod?: any\n  public modlist: any[] = []\n\n  public onlineUser?: any\n  //private subsctiptionNot: Subscription\n  public role: string = \"\"\n  public type: string = \"\"\n  public friendlist: any[] = []\n  public notification: any[] = []\n  public msg: string = \"\"\n  public btnVal: any[] = []\n\n  constructor(private app: AppComponent, private toast: ToastService, private sio: SocketioService, private us: UserHttpService, private router: Router, private activeRoute: ActivatedRoute) {\n    this.subscriptionName = this.us.get_update().subscribe((msg) => {\n      // Update username and icon of logged user\n      msg = msg.text\n      if (msg == \"User logged out\") {\n        this.tok = ''\n        this.username = ''\n        this.avatarImgURL = ''\n      } else if (msg == \"User logged in\") {\n        this.tok = this.us.get_token()\n        this.notifyFriendReq()\n        this.notifyGameReq()\n        this.notifyFriendReqAccepted()\n        this.notifyFriendDeleted()\n        this.notifyNewMsg()\n        this.getNotification(false, true)\n        this.getInpendinMsg()\n        this.getInpendingMsgMod()\n        this.getFriendlist()\n        this.getUsOnline()\n        this.notifyOnline()\n        this.foundGame()\n        this.username = this.us.get_username()\n      } else if (msg == \"Update user\") {\n        this.avatarImgURL = this.us.get_avatarImgURL()\n        this.notifyGameReq()\n        this.notifyFriendReq()\n        this.notifyFriendDeleted()\n        this.notifyFriendReqAccepted()\n        this.notifyNewMsg()\n        this.notifyOnline()\n        this.foundGame()\n        //this.getNotification(false, true)\n      }\n    })\n    this.subscriptionChat = this.us.get_badge().subscribe((msg) => {\n      console.log(\"Chat get_badge\")\n      msg = msg.text\n      if(msg == \"read friend-chat\"){\n        this.getInpendinMsg()\n      }else if(msg == \"read mod-chat\"){\n        this.getInpendingMsgMod()\n      }\n    })\n    /*\n        this.us.get_friendlist().subscribe((u) => {\n          this.friendlist = []\n          console.log()\n          u.friendlist.forEach((element: { [x: string]: any; }) => {\n            console.log(1)\n            this.friendlist.push({ id: element['_id'], username: element['username'], isBlocked: element['isBlocked'] })\n            console.log(this.friendlist);\n          });\n          console.log(this.friendlist);\n        })*/\n\n    /*\n    this.subsctiptionNot =  this.us.get_notification().subscribe((u) => {\n      this.notification = []\n      console.log()\n      u.notification.forEach((element: { [x: string]: any; }) => {\n        console.log(1)\n        this.notification.push({ id: element['_id'], username: element['sender'], type: element['type'] })\n        console.log(this.notification);\n      });\n      console.log(this.notification);\n    })*/\n  }\n\n  ngOnInit(): void {\n    this.tok = this.us.get_token()\n    if (this.tok) {\n      this.username = this.us.get_username()\n      this.avatarImgURL = this.us.get_avatarImgURL()\n      this.role = this.us.get_role()\n      //this.getNotification(false, true)\n    } else {\n      this.username = ''\n      this.avatarImgURL = ''\n    }\n  }\n\n  ngOnDestroy(): void {\n    /* Delete the subscription from the socket's listener */\n    this.subscriptionName.unsubscribe()\n    this.subscriptionReq.unsubscribe()\n    this.subscriptionNot.unsubscribe()\n    this.subscriptionMsg.unsubscribe()\n    this.gameReady.unsubscribe();\n    this.subscriptionChat.unsubscribe()\n  }\n\n  setName(username: string) {\n    this.friendUsername = username\n  }\n\n  setErr(){\n    this.errMsg = \"\"\n  }\n\n  get_userlist() {\n    this.us.get_userlist().subscribe((elem: any) => {\n      console.log(elem)\n      this.list = elem.userlist.filter((u: any) => { return u.username != this.us.get_username() })\n    })\n  }\n\n  has_moderator_role(): boolean {\n    if (this.tok) {\n      return this.us.has_moderator_role()\n    }\n    return false\n  }\n\n  has_nonregmod_role(): boolean {\n    if (this.tok) {\n      return this.us.has_nonregmod_role()\n    }\n    return false\n  }\n  /*\n    toastN(msg: string) {\n      this.toast.show(msg, {\n        classname: 'bg-info text-light',\n        delay: 3000,\n        autohide: true\n      });\n    }*/\n\n  getNotification(makeNotificationRead: boolean, inpending?: boolean) {\n    this.subscriptionNot = this.us.get_notification(makeNotificationRead, inpending).subscribe((u) => {\n      this.notification = []\n      //console.log(\"inpending: \"+inpending)\n      u.notification.forEach((element: { [x: string]: any; }) => {\n        //console.log(1)\n        if (!(element['type'] == 'randomMatchmaking') && !(element['type'] == 'friendMessage')) {\n          let msg\n          if (element['type'] == 'friendlyMatchmaking') {\n            msg = \"New Friendly Matchmaking from \" + element['sender']\n          } else if (element['type'] == 'friendRequest') {\n            msg = \"New Friend Request from \" + element['sender']\n          }\n          this.notification.push({ id: element['_id'], sender: element['sender'], type: element['type'], msg: msg })\n          //console.log(this.notification);\n          if (inpending == true) {\n            this.badgeContent++\n          }\n        }\n      });\n\n      if (makeNotificationRead) {\n        this.badgeContent = 0\n      }\n\n      if (this.badgeContent != 0) {\n        this.hideMatBadge = false\n      } else {\n        this.hideMatBadge = true\n      }\n      //console.log(this.notification);\n      console.log(\"badgeContent: \" + this.badgeContent)\n    })\n  }\n\n  isFriendReq(type: string): boolean {\n    if (type == 'friendRequest') {\n      return true\n    } else {\n      return false\n    }\n  }\n\n  getFriendlist() {\n    console.log(\"GetFriendlist\")\n    //this.messageInpending = this.getInpendinMsg()\n    this.getInpendinMsg()\n    let g = this.router.url\n    console.log(g)\n    //console.log(this.messageInpending)\n    this.us.get_friendlist().subscribe((u) => {\n      this.friendlist = []\n      u.friendlist.forEach((element: { [x: string]: any; }) => {\n        let countMsg: number = 0\n        let msgHide: boolean = true\n        let col\n        this.us.get_friend(element['username']).subscribe((friend) => {\n          this.messageInpending.forEach((msg: any) => {\n            if (msg.sender == element['username']) {\n              //date.getUTCDay().toString()+\"-\"+date.getUTCMonth().toString()+\"-\"+date.getFullYear().toString()+\" \"+date.getUTCHours().toString()+\":\"+date.getUTCMinutes().toString()\n              countMsg++\n              //console.log(this.num)\n            }\n          })\n          /*\n          let sos = this.onlineUser.filter((data: any) => {\n            if (data.username == friend.username) {\n              return true\n            } else {\n              return false\n            }\n          })*/\n          //console.log(this.onlineUser)\n          let sos = this.onlineUser.find((data: any) => { return data == element['username'] })\n          //console.log(\"Sos\")\n          //console.log(sos)\n          if (sos == element['username']) {\n            col = \"#88D498\"\n          } else {\n            col = \"#A4A5AE\"\n          }\n          //console.log(countMsg)\n          if (countMsg != 0) {\n            msgHide = false\n          }\n          if (element['isBlocked']) {\n            this.friendlist.push({ id: element['_id'], username: element['username'], isBlocked: \"bi bi-person-check-fill\", badgeNum: countMsg, badgeHidden: msgHide, color: col })\n          } else {\n            this.friendlist.push({ id: element['_id'], username: element['username'], isBlocked: \"bi bi-person-x-fill\", badgeNum: countMsg, badgeHidden: msgHide, color: col })\n          }\n        })\n      });\n    })\n  }\n\n  getModeratorList() {\n    this.us.get_userlist().subscribe((elem: any) => {\n      this.modlist = []\n      this.list = elem.userlist\n      console.log(this.list)\n      this.list.forEach((element: { [x: string]: any; }) => {\n        var countMsg: number = 0\n        var msgHide: boolean = true\n        this.messageInMod.forEach((msg: any) => {\n          if (msg.sender == element['username']) {\n            //date.getUTCDay().toString()+\"-\"+date.getUTCMonth().toString()+\"-\"+date.getFullYear().toString()+\" \"+date.getUTCHours().toString()+\":\"+date.getUTCMinutes().toString()\n            countMsg++\n            //console.log(this.num)\n          }\n        })\n        if (countMsg != 0) {\n          msgHide = false\n        }\n        if (element['roles'] == \"MODERATOR\") {\n          this.modlist.push({ id: element['_id'], username: element['username'], badgeNum: countMsg, badgeHidden: msgHide, /*color: col */ })\n        }\n      })\n      console.log(this.modlist)\n    })\n  }\n\n  getUsOnline() {\n    let online = this.us.get_usersOnline().subscribe((elem: any) => {\n      console.log(\"Online\")\n      console.log(elem.onlineuser)\n      this.onlineUser = elem.onlineuser\n    })\n  }\n  //Used to send a new friendRequest\n  addFriend(receiver: string, type: string) {\n    console.log(\"receiver: \", receiver)\n    this.errMsg = \"\"\n    this.us.add_friendRequest(receiver).subscribe((data) => {\n      this.app.toastCust(\"Request Forwarded\")\n      //this.toastN(\"Request Forwarded\")\n    }, (err) => {\n      let msg = JSON.parse(JSON.stringify(err)).error\n      console.log(`Login error: ${JSON.stringify(err)}`)\n      this.errMsg = msg[\"errormessage\"]\n    })\n  }\n\n  deleteFriend(friend: string) {\n    console.log(\"friend: \", friend)\n    this.us.delete_friend(friend).subscribe((data) => {\n      this.app.toastCust(\"Friend deleted\")\n      //this.toastN(\"Friend deleted\")\n      this.getFriendlist()\n    })\n  }\n\n\n  notifyFriendReq() {\n    if (!this.sio.isNull()) {\n      this.subscriptionReq = this.sio.request().subscribe(msg => {\n        this.msg = JSON.parse(JSON.stringify(msg)).type\n        let user = JSON.parse(JSON.stringify(msg)).sender\n        console.log(JSON.parse(JSON.stringify(msg)).type)\n        //console.log('got a msg: ' + msg);\n        if (msg) {\n          this.app.toastCust(\"New \" + this.msg + \" by \" + user)\n          //this.toastN(\"New \" + this.msg + \" by \" + user)\n          //console.log('got a msg: ' + msg);\n        }\n        this.badgeContent = 0\n        this.getNotification(false, true)\n        this.getNotification(false)\n      });\n    }\n  }\n\n  blockUnblock(username: string, block: string) {\n    let index = this.friendlist.findIndex((obj => obj.username == username))\n    console.log(this.friendlist[index])\n    if (block == \"bi bi-person-check-fill\") {\n      this.us.block_unblock_friend(username, false).subscribe((data) => {\n        //this.btnVal = \"Block\"\n        this.friendlist[index].isBlocked = \"bi bi-person-x-fill\"\n        this.app.toastCust(\"FRIEND UNBLOCKED\")\n        //this.toastN(\"FRIEND UNBLOCKED\")\n      })\n    } else if (block == \"bi bi-person-x-fill\") {\n      this.us.block_unblock_friend(username, true).subscribe((data) => {\n        //his.btnVal = \"UnBlocked\"\n        this.friendlist[index].isBlocked = \"bi bi-person-check-fill\"\n        this.app.toastCust(\"FRIEND BLOCKED\")\n        //this.toastN(\"FRIEND BLOCKED\")\n      })\n    }\n  }\n  foundGame(){\n     /* Subscribe to a socket's listener, the lobby, for knwo if i find a match */\n     this.gameReady = this.sio.gameReady().subscribe(msg => {\n      console.log('got a msg lobby: ' + JSON.stringify(msg));\n      if (msg.gameReady) {\n        //rimuove il backdrop dei modal (bug di bootstrap)\n        this.sio.setP2(msg.opponentPlayer)\n        Array.from(document.getElementsByClassName('modal-backdrop')).forEach((item) => {\n          item.parentElement?.removeChild(item);\n        });\n        this.router.navigate(['game']);\n      }\n      if (msg.gameReady != undefined && !msg.gameReady) {\n        //chiudere il modal\n        Array.from(document.getElementsByClassName('modal-backdrop')).forEach((item) => {\n          item.parentElement?.removeChild(item);\n        });\n        this.app.toastCust(\"Friendly match refused\")\n      }\n    });\n  }\n  notifyGameReq() {\n    if (!this.sio.isNull()) {\n      this.subscriptionReq = this.sio.gameRequest().subscribe(msg => {\n        this.msg = JSON.parse(JSON.stringify(msg)).type\n        let user = JSON.parse(JSON.stringify(msg)).player\n        console.log(JSON.parse(JSON.stringify(msg)).type)\n        //console.log('got a msg: ' + msg);\n        if (msg) {\n          this.app.toastCust(\"New \" + this.msg + \" by \" + user)\n          //this.toastN(\"New \" + this.msg + \" by \" + user)\n          //console.log('got a msg: ' + msg);\n        }\n        this.badgeContent = 0\n        this.getNotification(false, true)\n        this.getNotification(false)\n      });\n    }\n  }\n\n  notifyFriendReqAccepted() {\n    if (!this.sio.isNull()) {\n      this.subscriptionReq = this.sio.friendRequYN().subscribe(msg => {\n        //this.msg = JSON.parse(JSON.stringify(msg)).type\n        let user = JSON.parse(JSON.stringify(msg)).newFriend\n        //console.log(JSON.parse(JSON.stringify(msg)).type)\n        console.log('user: ' + user);\n        if (msg) {\n          if (user) {\n            this.app.toastCust(\"You are now friend with \" + user)\n          } else {\n            this.app.toastCust(\"Your friend request has been rejected\")\n          }\n          //this.toastN(\"You are now friend with \" + user)\n          //console.log('got a msg: ' + msg);\n        }\n        this.getFriendlist()\n      });\n    }\n  }\n\n  notifyFriendDeleted() {\n    if (!this.sio.isNull()) {\n      this.subscriptionReq = this.sio.friendDeleted().subscribe(msg => {\n        this.msg = JSON.parse(JSON.stringify(msg)).deletedFriend\n        //let user = JSON.parse(JSON.stringify(msg)).newFriend\n        //console.log(JSON.parse(JSON.stringify(msg)).type)\n        console.log('msg Deleted Friend: ' + this.msg[0]);\n        if (msg) {\n          this.app.toastCust(\"The friend \" + this.msg + \" has removed you from the friendlist.\")\n          //this.toastN(\"The friend \" + this.msg + \" has removed you from the friendlist.\")\n          //console.log('got a msg: ' + msg);\n        }\n        this.getFriendlist()\n      });\n    }\n  }\n\n  //Is used to add a new friend in the friendlist, when the friendRequest is accepted \n  addFriendToFriendlist(sender: string, accepted: boolean) {\n    console.log(\"sender: \", sender)\n    this.us.add_friend(sender, accepted).subscribe((data) => {\n      this.app.toastCust(\"Request Accepted\")\n      //this.toastN(\"Request Accepted\")\n      this.getFriendlist()\n    })\n  }\n  //Is used to add a new friend in the friendlist, when the friendRequest is accepted \n  async acceptGamerequest(sender: string) {\n    console.log(\"sender: \", sender)\n    if (!this.sio.isNull()) {\n      this.us.friendGame=true\n      await this.router.navigate(['/home'])\n      this.us.acceptFriendgame(sender,true).subscribe((msg)=>{\n      })\n\n\n    }\n  }\n  denyGamerequest(sender: string) {\n    console.log(\"sender: \", sender)\n    if (!this.sio.isNull()) {\n      this.us.acceptFriendgame(sender, false).subscribe((msg) => { })\n    }\n  }\n\n  getInpendinMsg() {\n    this.subscriptionIn = this.us.get_userMessage().subscribe((elem: any) => {\n      console.log(\"InpendingMsg:\")\n      console.log(elem.inPendingMessages)\n      this.badgeContentMsg = 0\n      this.messageInpending = elem.inPendingMessages\n      this.messageInpending.forEach((element: any) => {\n        if (element.receiver == this.us.get_username()) {\n          this.badgeContentMsg++;\n        }\n      });\n      console.log(\"badge\")\n      console.log(this.badgeContentMsg)\n      if (this.badgeContentMsg == 0) {\n        this.hideMatBadgeMsg = true\n      } else {\n        this.hideMatBadgeMsg = false\n      }\n      /*\n      console.log(\"GetInpending: \")\n      console.log(this.messageInpending)\n      this.us.get_friend(username).subscribe((friend) => {\n        this.messageInpending.forEach((element: any) => {\n          if (element.sender == username) {\n            //date.getUTCDay().toString()+\"-\"+date.getUTCMonth().toString()+\"-\"+date.getFullYear().toString()+\" \"+date.getUTCHours().toString()+\":\"+date.getUTCMinutes().toString()\n            console.log(\"Sono gabbriel\")\n            numb++\n            //console.log(this.num)\n          }\n        })\n      })*/\n    })\n    //return this.messageInpending\n  }\n\n  getInpendingMsgMod() {\n    this.subscriptionIn = this.us.get_userMessage(true).subscribe((elem: any) => {\n      console.log(\"InpendingMsgMod:\")\n      console.log(elem.inPendingMessages)\n      this.badgeContMod = 0\n      this.messageInMod = elem.inPendingMessages\n      this.messageInMod.forEach((element: any) => {\n        if (element.receiver == this.us.get_username()) {\n          this.badgeContMod++;\n        }\n      });\n      console.log(\"badgeMod\")\n      console.log(this.badgeContMod)\n      if(this.us.has_moderator_role()){\n        this.badgeAllUs = this.badgeContMod\n        this.badgeContMod = 0\n      }\n      if(this.badgeAllUs == 0){\n        this.hideBadgeAll = true\n      }else{\n        this.hideBadgeAll = false\n      }\n      if (this.badgeContMod == 0) {\n        this.hideBadgeMod = true\n      } else {\n        this.hideBadgeMod = false\n      }\n    })\n  }\n\n  readMessage(myus: string, username: string, modMessage: boolean) {\n    console.log(this.router.parseUrl(this.router.url))\n    this.us.readMessage(myus, username, modMessage).subscribe()\n  }\n\n  /*\n    getFriendListEnorme() {\n      this.subscriptionIn = this.us.get_userMessage().subscribe((elem: any) => {\n        //console.log(elem.inPendingMessages)\n        this.badgeContentMsg = 0\n        this.messageInpending = elem.inPendingMessages\n        this.us.get_friendlist().subscribe((u) => {\n          this.friendlist = []\n          u.friendlist.forEach((element: { [x: string]: any; }) => {\n            let countMsg: number = 0\n            let msgHide: boolean = true\n            let col\n            this.us.get_friend(element['username']).subscribe((friend) => {\n              this.messageInpending.forEach((msg: any) => {\n                if (msg.sender == element['username']) {\n                  countMsg++\n                }\n                if (msg.receiver == this.us.get_username() && msg.sender == element['username']) {\n                  this.badgeContentMsg++;\n                }\n              })\n              //console.log(countMsg)\n              //console.log(this.onlineUser)\n              let sos = this.onlineUser.find((data: any) => { return data == element['username'] })\n              //console.log(\"Sos\")\n              //console.log(sos)\n              if (sos == element['username']) {\n                col = \"yellow\"\n              } else {\n                col = \"red\"\n              }\n              if (countMsg != 0) {\n                msgHide = false\n              }\n              if (element['isBlocked']) {\n                this.friendlist.push({ id: element['_id'], username: element['username'], isBlocked: \"bi bi-person-check-fill\", badgeNum: countMsg, badgeHidden: msgHide, color: col })\n              } else {\n                this.friendlist.push({ id: element['_id'], username: element['username'], isBlocked: \"bi bi-person-x-fill\", badgeNum: countMsg, badgeHidden: msgHide, color: col })\n              }\n              if (this.badgeContentMsg == 0) {\n                this.hideMatBadgeMsg = true\n              } else {\n                this.hideMatBadgeMsg = false\n              }\n            })\n          });\n        })\n      })\n    }*/\n  notifyNewMsg() {\n    if (!this.sio.isNull()) {\n      //let g = this.router.parseUrl(this.router.url).root.children.primary.segments[0].path\n      //if (g) {\n      this.subscriptionMsg = this.sio.newMessage().subscribe((msg) => {\n        console.log(\"Notify New Msg\")\n        console.log(msg)\n        let isAModMessage = JSON.parse(JSON.stringify(msg)).isAModMessage\n        let rec = JSON.parse(JSON.stringify(msg)).receiver\n        let send = JSON.parse(JSON.stringify(msg)).sender\n        let inpend = JSON.parse(JSON.stringify(msg)).inpending\n        if (isAModMessage) {\n          let g = this.router.parseUrl(this.router.url).root.children.primary.segments[0].path\n          let g1 = \"\"\n          if (this.router.parseUrl(this.router.url).root.children.primary.segments[1] != undefined) {\n            g1 = this.router.parseUrl(this.router.url).root.children.primary.segments[1].path\n          }\n          //console.log(\"NotifyNewMsg\")\n          console.log(g1)\n          if (\"mod-chat\" != g || g1 != send) {\n\n            //console.log(\"NotifyNewMsg\")\n            if (inpend) {\n              this.getInpendingMsgMod()\n            }\n            //console.log(g)\n            //console.log(inpend)\n            this.modlist.forEach((element: { [x: string]: any; }) => {\n              if (inpend) {\n                if (element['username'] == send) {\n                  element['badgeNum']++\n                }\n                if (element['badgeNum'] != 0) {\n                  element['badgeHidden'] = false\n                } else {\n                  element['badgeHidden'] = true\n                }\n              }\n            })\n          }\n        } else {\n          let g = this.router.parseUrl(this.router.url).root.children.primary.segments[0].path\n          let g1 = \"\"\n          if (this.router.parseUrl(this.router.url).root.children.primary.segments[1] != undefined) {\n            g1 = this.router.parseUrl(this.router.url).root.children.primary.segments[1].path\n          }\n          //console.log(\"NotifyNewMsg\")\n          console.log(g1)\n          if (\"friend-chat\" != g || g1 != send) {\n\n            //console.log(\"NotifyNewMsg\")\n            if (inpend) {\n              this.getInpendinMsg()\n            }\n            //console.log(g)\n            //console.log(inpend)\n            this.friendlist.forEach((element: { [x: string]: any; }) => {\n              if (inpend) {\n                if (element['username'] == send) {\n                  element['badgeNum']++\n                }\n                if (element['badgeNum'] != 0) {\n                  element['badgeHidden'] = false\n                } else {\n                  element['badgeHidden'] = true\n                }\n              }\n            })\n            //this.getFriendlist()\n            /*\n            this.friendlist.forEach((element: { [x: string]: any; }) => {\n              let countMsg: number = 0\n              let msgHide: boolean = true\n              let col\n              this.us.get_friend(element['username']).subscribe((friend) => {\n                this.messageInpending.forEach((msg: any) => {\n                  if (msg.sender == element['username']) {\n                    countMsg++\n                  }\n                  if (msg.receiver == this.us.get_username() && msg.sender == element['username']) {\n                    this.badgeContentMsg++;\n                  }\n                })\n                //console.log(countMsg)\n                console.log(this.onlineUser)\n                let sos = this.onlineUser.find((data: any) => { return data == element['username'] })\n                console.log(\"Sos\")\n                console.log(sos)\n                if (sos == element['username']) {\n                  col = \"yellow\"\n                } else {\n                  col = \"red\"\n                }\n                if (countMsg != 0) {\n                  msgHide = false\n                }\n                if (element['isBlocked']) {\n                  this.friendlist.push({ id: element['_id'], username: element['username'], isBlocked: \"bi bi-person-check-fill\", badgeNum: countMsg, badgeHidden: msgHide, color: col })\n                } else {\n                  this.friendlist.push({ id: element['_id'], username: element['username'], isBlocked: \"bi bi-person-x-fill\", badgeNum: countMsg, badgeHidden: msgHide, color: col })\n                }\n                if (this.badgeContentMsg == 0) {\n                  this.hideMatBadgeMsg = true\n                } else {\n                  this.hideMatBadgeMsg = false\n                }\n              })\n            })*/\n            //})\n            //this.getFriendListEnorme()\n          }\n        }\n      })\n      // }\n    }\n  }\n\n\n\n  notifyOnline() {\n    if (!this.sio.isNull()) {\n      this.subscriptionMsg = this.sio.isOnline().subscribe((msg) => {\n        this.getUsOnline()\n\n        let usern = JSON.parse(JSON.stringify(msg)).username\n        let conn = JSON.parse(JSON.stringify(msg)).isConnected\n        //console.log(\"NotifyOnline\")\n        //console.log(this.onlineUser)\n        this.friendlist.forEach((element: { [x: string]: any; }) => {\n          //console.log(element['username'])\n          //console.log(usern)\n          if (element['username'] == usern) {\n            if (conn) {\n              console.log(\"ONLINE\")\n              this.app.toastCust(usern + \" è online.\")\n              //this.toastN(usern+\" è online.\")\n              element['color'] = \"#88D498\"\n            } else {\n              console.log(\"OFFFLINE\")\n              this.app.toastCust(usern + \" è offline.\")\n              //this.toastN(usern+\" è offline.\")\n              element['color'] = \"#A4A5AE\"\n            }\n          }\n          //console.log(element['color'])\n        })\n        /*\n        this.us.get_friendlist().subscribe((elem) => {\n          \n          elem.friendlist.forEach((element: { [x: string]: any; }) => {\n            console.log(element['username'])\n            console.log(usern)\n            if(element['username'] == usern){\n              if(conn){\n                element['color'] = \"yellow\"\n                element['username'] = \"Gigio\"\n              }else{\n                element['color'] = \"red\"\n              }\n            }\n            console.log(element['color'])\n          })*/\n        /*\n        let sis = elem.find((data: any) => { return data.username == msg })\n        console.log(\"uSERNAD\")\n        console.log(sis)\n      })*/\n      })\n    }\n  }\n\n  navigate(route: String) {\n    this.router.routeReuseStrategy.shouldReuseRoute = () => false\n    this.router.onSameUrlNavigation = \"reload\"\n    this.router.navigate([route])\n  }\n\n}\n","<div class=\"myNav bg-dark text-white\">\n  <nav class=\"navbar navbar-dark text-white bg-dark\">\n    <div class=\"container\">\n      <div class=\"col-8\">\n        <button id=\"mainbtn\" class=\"text-white border-0\" (click)=\"navigate('home')\">Forza Quattro</button>\n      </div>\n      <div class=\"col-4 nav justify-content-end\">\n        <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\"\n          data-bs-target=\"#navbarToggleExternalContent\">\n          <span class=\"navbar-toggler-icon\"></span>\n        </button>\n      </div>\n    </div>\n  </nav>\n  <div class=\"collapse show pt-0\" id=\"navbarToggleExternalContent\">\n    <div class=\"p-1 pt-0\">\n      <hr>\n      <ul class=\"nav nav-pills flex-column mb-auto\">\n        <li class=\"nav-item\">\n          <button (click)=\"navigate('home')\" class=\"nav-link text-white w-100 text-start\">\n            <mat-icon class=\"customIcon\" color=\"primary\" [ngStyle]=\"{'color':'white'}\">home</mat-icon>\n            Home\n          </button>\n        </li>\n\n        <li class=\"nav-item\" *ngIf=\"username\">\n          <!--Open the modal(modalNot)  <span mat-raised-button >Notification</span>-->\n          <button class=\"nav-link text-white w-100 text-start\" (click)=\"getNotification(true, undefined)\"\n            id=\"notification\" data-bs-toggle=\"modal\" data-bs-target=\"#modalNot\">\n            <mat-icon class=\"customIcon\" color=\"primary\" matBadgeColor=\"accent\" [matBadge]=\"badgeContent\" matBadgePosition=\"above before\"\n            matBadgeOverlap=\"true\" [matBadgeHidden]=\"hideMatBadge\" matBadgeSize=\"medium\" [ngStyle]=\"{'color':'white'}\">notifications\n          </mat-icon>\n          <span mat-raised-button> Notification</span>\n          </button>\n        </li>\n        <!--Allow the user to dipslay the message from all moderator-->\n        <li class=\"nav-item\" *ngIf=\"username\">\n          <!--Open the modal(modalNot)  <span mat-raised-button >Notification</span>-->\n          <button class=\"nav-link text-white w-100 text-start\" style=\"text-overflow: ellipsis;\" (click)=\"getModeratorList()\" id=\"notification\"\n            data-bs-toggle=\"modal\" data-bs-target=\"#modalMod\">\n            <mat-icon class=\"customIcon\" color=\"primary\" matBadgeColor=\"accent\" [matBadge]=\"badgeContMod\" matBadgePosition=\"above before\"\n            matBadgeOverlap=\"true\" [matBadgeHidden]=\"hideBadgeMod\" matBadgeSize=\"medium\" [ngStyle]=\"{'color':'white'}\">chat\n          </mat-icon>\n          <span mat-raised-button> Moderator sms</span>\n          </button>\n        </li>\n\n        <li *ngIf=\"has_moderator_role()\" class=\"nav-item\">\n          <button (click)=\"navigate('new-mod')\" class=\"nav-link text-white w-100 text-start\">\n            <mat-icon class=\"customIcon\" color=\"primary\" [ngStyle]=\"{'color':'white'}\">person_add</mat-icon>\n            Add new mod\n          </button>\n        </li>\n\n        <li class=\"nav-item\" *ngIf=\"has_moderator_role()\">\n          <button class=\"nav-link text-white w-100 text-start\" (click)=\"navigate('all-user')\" id=\"allUs\">\n            <mat-icon class=\"customIcon\" color=\"primary\" matBadgeColor=\"accent\" [matBadge]=\"badgeAllUs\" matBadgePosition=\"above before\"\n            matBadgeOverlap=\"true\" [matBadgeHidden]=\"hideBadgeAll\" matBadgeSize=\"medium\" [ngStyle]=\"{'color':'white'}\">people\n          </mat-icon>\n          <span mat-raised-button> All User</span>\n          </button>\n        </li>\n      </ul>\n      <hr>\n\n\n      <!--<p *ngIf=\"msg\" ()=\"toastN('salve')\"></p><div class=\"toast-header\">\n          <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"toast\"></button>\n        </div>\n        <div class=\"toast-body\">\n          {{msg}}\n        </div>\n      </div>-->\n\n      <!-- OFFCANVAS\n      <button class=\"btn btn-primary\" id=\"friendList\" type=\"button\" data-bs-toggle=\"offcanvas\"\n        data-bs-target=\"#friendListCanvas\" aria-controls=\"friendListCanvas\" width=\"32\" height=\"32\">FriendList</button>\n\n        <div class=\"offcanvas offcanvas-end text-black\"  data-bs-backdrop=\"true\" data-bs-scroll=\"true\" id=\"friendListCanvas\" aria-labelledby=\"offcanvasRightLabel\">\n          <div class=\"offcanvas-header\">\n            <h5 id=\"offcanvasRightLabel\">Offcanvas right</h5>\n            <button type=\"button\" class=\"btn-close text-reset\" data-bs-dismiss=\"offcanvas\" aria-label=\"Close\"></button>\n          </div>\n          <div class=\"offcanvas-body\">\n            <label>sADLASDLASLDASLDASL</label>\n            <button type=\"button\" class=\"btn btn-primary\" data-bs-toggle=\"modal\" data-bs-target=\"#modalReq\">\n              Launch static backdrop modal\n            </button>\n            \n            <div class=\"modal fade\" id=\"modalReq\" data-bs-backdrop=\"false\" data-bs-keyboard=\"false\" tabindex=\"-1\" aria-labelledby=\"modalReqLabel\" aria-hidden=\"false\">\n              <div class=\"modal-dialog\">\n                <div class=\"modal-content\">\n                  <div class=\"modal-header\">\n                    <h5 class=\"modal-title\" id=\"modalReqLabel\">Modal title</h5>\n                    <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n                  </div>\n                  <div class=\"modal-body\">\n                    <div class=\"form-floating\">\n                      <input type=\"text\" class=\"form-control\" id=\"usernameFriend\" placeholder=\"usernameAdd\" #usernameAdd required>\n                      <label for=\"usernameFriend\">Username</label>\n                    </div>\n                  </div>\n                  <div class=\"modal-footer\">\n                    <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\n                    <button type=\"button\" (click)=\"addFriend(usernameAdd.value, 'friendRequest')\" class=\"btn btn-primary\">Send the request</button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>-->\n\n      <!--ModalNotification Display the list of all the notification except the randomMatchmaking notification-->\n      <div class=\"modal fade text-black\" id=\"modalNot\" data-bs-backdrop=\"true\" data-bs-keyboard=\"false\" tabindex=\"-1\"\n        aria-labelledby=\"modalReqLabel\" aria-hidden=\"false\">\n        <div class=\"modal-dialog\">\n          <div class=\"modal-content\">\n            <div class=\"modal-header\">\n              <h5 class=\"modal-title\" id=\"modalReqLabel\">NOTIFICATION</h5>\n              <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n            </div>\n            <div class=\"modal-body\">\n              <div class=\"list-group\">\n                <li class=\"list-group-item d-flex justify-content-between align-items-center\"\n                  *ngFor='let lnotification of notification'>\n                  {{lnotification.msg}}\n                  <span class=\"align-items-right\">\n                    <button *ngIf=\"lnotification.type == 'friendRequest'\" type=\"button\" class=\"friendListBtn\"\n                      data-bs-dismiss=\"modal\" (click)=\"addFriendToFriendlist(lnotification.sender,true)\"\n                      id=\"btnBlock\"><span>\n                        <mat-icon>done_outline</mat-icon>\n                      </span></button>\n                    <button *ngIf=\"lnotification.type == 'friendRequest'\" type=\"button\" class=\"friendListBtn\"\n                      data-bs-dismiss=\"modal\" (click)=\"addFriendToFriendlist(lnotification.sender,false)\"\n                      id=\"btnDel\"><span>\n                        <mat-icon>not_interested</mat-icon>\n                      </span></button>\n                    <button *ngIf=\"lnotification.type == 'friendlyMatchmaking'\" type=\"button\" class=\"friendListBtn\"\n                      data-bs-dismiss=\"modal\" (click)=\"acceptGamerequest(lnotification.sender)\" id=\"btnBlock\"><span>\n                        <mat-icon>done_outline</mat-icon>\n                      </span></button>\n                    <button *ngIf=\"lnotification.type == 'friendlyMatchmaking'\" type=\"button\" class=\"friendListBtn\"\n                      data-bs-dismiss=\"modal\" (click)=\"denyGamerequest(lnotification.sender)\" id=\"btnDel\"><span>\n                        <mat-icon>not_interested</mat-icon>\n                      </span></button>\n                  </span>\n                </li>\n              </div>\n            </div>\n            <div class=\"modal-footer\">\n              <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\n            </div>\n          </div>\n        </div>\n      </div>\n      <!--ModalNotification-->\n\n      <!--ModalModerator Display the list of all the notification except the randomMatchmaking notification-->\n      <div class=\"modal fade text-black\" id=\"modalMod\" data-bs-backdrop=\"true\" data-bs-keyboard=\"false\" tabindex=\"-1\"\n        aria-labelledby=\"modalReqLabel\" aria-hidden=\"false\">\n        <div class=\"modal-dialog\">\n          <div class=\"modal-content\">\n            <div class=\"modal-header\">\n              <h5 class=\"modal-title\" id=\"modalReqLabel\">NOTIFICATION</h5>\n              <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n            </div>\n            <div class=\"modal-body\">\n              <div class=\"list-group\">\n                <li class=\"list-group-item d-flex justify-content-between align-items-center\"\n                  *ngFor='let mod of modlist'>\n                  {{mod.username}}\n                  <span class=\"align-items-right\">\n                    <button type=\"button\" class=\"friendListBtn mr-6\" data-bs-dismiss=\"modal\" (click)=\"readMessage(username,mod.username,true);getInpendingMsgMod();navigate('mod-chat/'+mod.username+'')\">\n                      <span>\n                        <!--matBadgeColor=\"accent\" matBadgeSize=\"small\" matBadgePosition=\"above after\" matBadgeOverlap=\"true\"-->\n                        <mat-icon [matBadge]=\"mod.badgeNum\" matBadgeColor=\"accent\" matBadgeSize=\"small\"\n                          matBadgePosition=\"above after\" matBadgeOverlap=\"true\" [matBadgeHidden]=\"mod.badgeHidden\"\n                          [ngStyle]=\"{'color':'white'} \">chat</mat-icon>\n                      </span>\n                    </button>\n                  </span>\n                </li>\n              </div>\n            </div>\n            <div class=\"modal-footer\">\n              <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\n            </div>\n          </div>\n        </div>\n      </div>\n      <!--ModalModerator-->\n\n      <div *ngIf=\"username\" class=\"dropdown ms-3 profileIcon mb-3\">\n        <a href=\"#\" class=\"align-items-center text-white text-decoration-none dropdown-toggle\" id=\"dropdownUser1\"\n          data-bs-toggle=\"dropdown\">\n          <img *ngIf=\"!has_nonregmod_role()\" src=\"{{avatarImgURL}}\" alt=\"\" width=\"32\" height=\"32\"\n            class=\"rounded-circle me-2\">\n          <strong>{{username}}</strong>\n        </a>\n        <ul class=\"dropdown-menu dropdown-menu-dark text-small shadow\">\n          <li><button class=\"dropdown-item\" (click)=\"navigate('profile')\"><mat-icon [ngStyle]=\"{'color':'white'} \">account_circle</mat-icon> Profile</button></li>\n          <li>\n            <hr class=\"dropdown-divider\">\n          </li>\n          <li><button class=\"dropdown-item\" (click)=\"navigate('logout')\"><mat-icon>exit_to_app</mat-icon> Sign out</button></li>\n        </ul>\n      </div>\n    </div>\n  </div>\n</div>\n\n<!-- OFFCANVAS -->\n<button *ngIf=\"username\" class=\"btn btn-primary\" (click)=\"getFriendlist()\" id=\"friendList\" type=\"button\"\n  data-bs-toggle=\"offcanvas\" data-bs-target=\"#friendListCanvas\" aria-controls=\"friendListCanvas\" width=\"32\" height=\"32\">\n  <mat-icon color=\"primary\" matBadgeColor=\"accent\" [matBadge]=\"badgeContentMsg\" matBadgePosition=\"above after\"\n    matBadgeOverlap=\"true\" [matBadgeHidden]=\"hideMatBadgeMsg\" [ngStyle]=\"{'color':'white'}\">notifications\n  </mat-icon>FriendList\n</button>\n\n<div class=\"offcanvas offcanvas-end text-black\" data-bs-backdrop=\"true\" data-bs-scroll=\"true\" id=\"friendListCanvas\"\n  aria-labelledby=\"offcanvasRightLabel\">\n  <div class=\"offcanvas-header\">\n    <h5 id=\"offcanvasRightLabel\">FriendList</h5>\n    <button type=\"button\" class=\"btn-close text-reset\" data-bs-dismiss=\"offcanvas\" aria-label=\"Close\"></button>\n  </div>\n  <div class=\"offcanvas-body\">\n    <div class=\"list-group\">\n      <li class=\"list-group-item d-flex justify-content-between align-items-center\" *ngFor='let lfriend of friendlist'>\n        {{lfriend.username}}\n        <!--\n        <span class=\"align-items-bottom\">\n        <span class=\"dot bg-dark\" ></span>\n      </span> (click)=\"readMessage(username,lfriend.username);navigate('friend-chat/'+lfriend.username+'')\" routerLink=\"/friend-chat/{{lfriend.username}}\" routerLinkActive=\"active-link\"-->\n        <span class=\"align-items-right\">\n          <button type=\"button\" class=\"friendListBtn mr-2\" \n            (click)=\"deleteFriend(lfriend.username)\" id=\"btnDel\"><span>\n              <mat-icon>close</mat-icon>\n            </span></button>\n          <button type=\"button\" class=\"friendListBtn mr-6\" data-bs-dismiss=\"offcanvas\"\n            (click)=\"readMessage(username,lfriend.username,false);getInpendinMsg();navigate('friend-chat/'+lfriend.username+'')\">\n            <span>\n              <!--matBadgeColor=\"accent\" matBadgeSize=\"small\" matBadgePosition=\"above after\" matBadgeOverlap=\"true\"-->\n              <mat-icon [matBadge]=\"lfriend.badgeNum\" matBadgeColor=\"accent\" matBadgeSize=\"small\"\n                matBadgePosition=\"above after\" matBadgeOverlap=\"true\" [matBadgeHidden]=\"lfriend.badgeHidden\"\n                [ngStyle]=\"{'color':'white'} \">chat</mat-icon>\n            </span>\n          </button>\n          <button type=\"button\" class=\"friendListBtn mr-2\" data-bs-dismiss=\"offcanvas\"\n            (click)=\"navigate('user-stats/'+lfriend.username+'')\"><span>\n              <mat-icon>equalizer</mat-icon>\n            </span></button>\n          <button type=\"button\" class=\"friendListBtn\" \n            (click)=\"blockUnblock(lfriend.username,lfriend.isBlocked)\" id=\"btnBlock\"><span><i\n                class=\"{{lfriend.isBlocked}}\"></i></span></button>\n        </span>\n        <span class=\"on-off position-absolute translate-middle border border-light rounded-circle\"\n          [ngStyle]=\"{'background-color': lfriend.color}\">\n          <span class=\"visually-hidden\">New alerts</span>\n        </span>\n      </li>\n    </div>\n\n    <button type=\"button\" class=\"btn btn-primary mx-auto\" id=\"reqButton\" data-bs-toggle=\"modal\" (click)=\"get_userlist()\"\n      data-bs-target=\"#modalReq\">\n      ADD FRIEND\n    </button>\n\n  </div>\n</div>\n<!-- Modal AddFriend -->\n<div class=\"modal fade\" id=\"modalReq\" data-bs-backdrop=\"false\" data-bs-keyboard=\"false\" tabindex=\"-1\"\n  aria-labelledby=\"modalReqLabel\" aria-hidden=\"false\">\n  <div class=\"modal-dialog\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h5 class=\"modal-title\" id=\"modalReqLabel\">ADD A NEW FRIEND</h5>\n        <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\" (click)=\"setErr()\"></button>\n      </div>\n      <div class=\"modal-body\">\n        <div class=\"form-floating\">\n          <input type=\"text\" class=\"form-control\" id=\"usernameFriend\" placeholder=\"usernameAdd\" #usernameAdd required\n            [value]=\"friendUsername\">\n          <br>\n          <div class=\"list-group\" id=\"userList\">\n            <li\n              class=\"list-group-item list-group-item-action list-group-item-info d-flex justify-content-between align-items-center\"\n              (click)=\"setName(user.username)\" *ngFor='let user of list'>{{user.username}}</li>\n          </div>\n          <label for=\"usernameFriend\">Username</label>\n        </div>\n        <div *ngIf=\"errMsg\" class=\"alert alert-danger\" role=\"alert\">\n          Send Request error: {{errMsg}}\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\" (click)=\"setErr()\">Close</button>\n        <button type=\"button\" (click)=\"addFriend(usernameAdd.value, 'friendRequest')\" (click)=\"usernameAdd.value = ''\"\n          class=\"btn btn-primary\" >Send\n          the request</button>\n      </div>\n    </div>\n  </div>\n</div>\n<!--Modal-->"],"sourceRoot":""},"metadata":{},"sourceType":"module"}